import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c,d,a as e,e as a,w as t,b as n,f as r}from"./app-2a2d189a.js";const u="/assets/服务器环境配置CUDA-b1ec5a7a.png",h={},A=e("h1",{id:"cuda环境配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cuda环境配置","aria-hidden":"true"},"#"),n(" CUDA环境配置")],-1),_=e("p",null,"CUDA环境配置",-1),D=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"相关信息"),e("ul",null,[e("li",null,"主要是在安装CUDA的环境以及一些配置")])],-1),U={class:"table-of-contents"},C=e("h2",{id:"一、简单介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、简单介绍","aria-hidden":"true"},"#"),n(" 一、简单介绍")],-1),b=e("li",null,"====",-1),k=e("li",null,"这个主要看自己整的那个MarkDown就行了。",-1),m={href:"https://blog.csdn.net/weixin_42421914/article/details/132699293",target:"_blank",rel:"noopener noreferrer"},f={href:"https://zhuanlan.zhihu.com/p/508810115",target:"_blank",rel:"noopener noreferrer"},I=e("li",null,null,-1),v=r('<br><h2 id="二、过程" tabindex="-1"><a class="header-anchor" href="#二、过程" aria-hidden="true">#</a> 二、过程</h2><ul><li>====</li><li>要在Ubuntu上查看CUDA的版本，可以使用以下命令行操作：</li></ul><p>打开终端。</p><p>输入以下命令并按Enter键运行：nvcc --version</p><p>系统将显示安装的NVIDIA CUDA工具包的版本信息。</p><p>如果没有安装CUDA或者无法识别该命令，则需要先安装CUDA Toolkit才能进行相关操作。以下为安装CUDA Toolkit的基本步骤（供参考）：</p><p>首先，确保已经正确安装了NVIDIA GPU驱动程序。</p>',8),E={href:"https://developer.nvidia.com/cuda-downloads%EF%BC%89%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%89%88%E6%9C%AC%E5%92%8C%E5%AF%B9%E5%BA%94%E7%9A%84Linux%E5%8F%91%E8%A1%8C%E7%89%88%E3%80%82",target:"_blank",rel:"noopener noreferrer"},x=r(`<p>根据所选版本的说明文件中提供的指导，下载并安装CUDA Toolkit。</p><p>完成安装后，重新打开终端，再次运行 nvcc --version 来验证CUDA版本。</p><ul><li><p><mark>ubuntu怎么cuda</mark></p></li><li><p>在Ubuntu系统上，对于使用Intel HD Graphics 530 (SKL GT2)这类集成显卡的电脑，使用CUDA（Compute Unified Device Architecture）可能会有些限制，因为CUDA主要是为NVIDIA的GPU设计的。然而，如果你确实有这样的需求，并且你的系统上还有其他兼容CUDA的NVIDIA GPU，你可以按照以下步骤来安装和使用CUDA：</p><p>检查CUDA兼容性：<br> 首先，你需要确认你的NVIDIA GPU是否支持CUDA，并了解它支持的CUDA版本。你可以访问NVIDIA的官方网站或查阅相关文档来获取这些信息。</p><p>安装NVIDIA驱动：<br> 在Ubuntu上，你需要安装适合你GPU的NVIDIA驱动程序。你可以使用Ubuntu的软件包管理工具或从NVIDIA的官方网站下载并安装。</p><p>下载并安装CUDA Toolkit：<br> 访问NVIDIA的官方网站，下载适合你系统和GPU的CUDA Toolkit。然后，按照官方文档中的说明进行安装。这通常涉及解压下载的文件，并运行安装脚本。</p><p>设置环境变量：<br> 安装完成后，你需要设置一些环境变量，以便在命令行中方便地访问CUDA工具。这通常涉及编辑你的shell配置文件（如<sub>/.bashrc或</sub>/.zshrc），并添加一些路径和变量。</p><p>验证安装：<br> 你可以通过运行一些简单的CUDA程序来验证安装是否成功。例如，你可以编写一个简单的CUDA程序，并使用nvcc编译器进行编译和运行。</p><p>使用CUDA进行编程：<br> 一旦你验证了CUDA的安装，你就可以开始使用CUDA进行编程了。你可以编写自己的CUDA程序，或者使用支持CUDA的库和框架（如TensorFlow、PyTorch等）进行深度学习和其他GPU加速的计算任务。</p></li></ul><p>需要注意的是，由于Intel HD Graphics 530 (SKL GT2)是集成显卡，它本身不支持CUDA。因此，如果你的电脑上没有其他兼容CUDA的NVIDIA GPU，那么你将无法在该电脑上使用CUDA。在这种情况下，你可能需要考虑升级你的显卡或使用其他支持该集成显卡的加速技术（如果有的话）。</p><h2 id="三、服务器环境配置" tabindex="-1"><a class="header-anchor" href="#三、服务器环境配置" aria-hidden="true">#</a> 三、服务器环境配置</h2><ul><li><mark>关于CUDA 的 自己账户下的 环境配置</mark></li><li>因为CUDA Toolkit 已经下载好了在外盘，所以在 /home 下自己的账户下，因为用vscode打开的；</li><li>打开：.bashrc 这个文件夹</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>在最后加上 路径配置：

<span class="token keyword">export</span> PATH<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>cuda<span class="token operator">-</span><span class="token number">12.2</span><span class="token operator">/</span>bin<span class="token operator">:</span>$PATH
<span class="token keyword">export</span> LD_LIBRARY_PATH<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>cuda<span class="token operator">-</span><span class="token number">12.2</span><span class="token operator">/</span>lib64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="服务器环境配置CUDA" tabindex="0" loading="lazy"><figcaption>服务器环境配置CUDA</figcaption></figure>',8);function N(V,g){const s=l("router-link"),o=l("ExternalLinkIcon");return p(),c("div",null,[A,_,d(" more "),D,e("nav",U,[e("ul",null,[e("li",null,[a(s,{to:"#一、简单介绍"},{default:t(()=>[n("一、简单介绍")]),_:1})]),e("li",null,[a(s,{to:"#二、过程"},{default:t(()=>[n("二、过程")]),_:1})]),e("li",null,[a(s,{to:"#三、服务器环境配置"},{default:t(()=>[n("三、服务器环境配置")]),_:1})])])]),C,e("ul",null,[b,k,e("li",null,[n("下载和安装："),e("a",m,[n("https://blog.csdn.net/weixin_42421914/article/details/132699293"),a(o)])]),e("li",null,[n("整体环境关系："),e("a",f,[n("https://zhuanlan.zhihu.com/p/508810115"),a(o)])]),I]),v,e("p",null,[n("前往NVIDIA官网的CUDA下载页面（"),e("a",E,[n("https://developer.nvidia.com/cuda-downloads）选择合适的版本和对应的Linux发行版。"),a(o)])]),x])}const P=i(h,[["render",N],["__file","CUDA环境配置.html.vue"]]);export{P as default};
