import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as r,d as u,a as n,b as s,e as a,w as t,f as l}from"./app-2a2d189a.js";const d={},m=n("h1",{id:"k-第尝试一下",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#k-第尝试一下","aria-hidden":"true"},"#"),s(" K-第尝试一下")],-1),v=n("p",null,"K-第尝试一下",-1),k={class:"hint-container info"},b=n("p",{class:"hint-container-title"},"说明",-1),h=n("p",null,"主要是各种搜索找的学习；",-1),g=n("li",null,"这个需要服务器进行创建的；先不看视频",-1),_={href:"https://zhuanlan.zhihu.com/p/557854767",target:"_blank",rel:"noopener noreferrer"},f={class:"table-of-contents"},x=l('<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="概述框架" tabindex="-1"><a class="header-anchor" href="#概述框架" aria-hidden="true">#</a> 概述框架</h2><h2 id="k-第尝试一下-1" tabindex="-1"><a class="header-anchor" href="#k-第尝试一下-1" aria-hidden="true">#</a> K-第尝试一下</h2><h2 id="第一步-空仓库" tabindex="-1"><a class="header-anchor" href="#第一步-空仓库" aria-hidden="true">#</a> 第一步 空仓库</h2>',4),S=n("li",null,[n("p",null,"主要是讲述在Github创建一个空的仓库")],-1),H=n("li",null,[n("p",null,"无论本地的东西是不是；")],-1),G=n("li",null,[n("p",null,"首先在远程仓库比如Github这种的，创建一个空的仓库")],-1),y=n("li",null,[n("p",null,"然后在本地创建“同名”文件夹 或者说在已经有的文件夹 内进行 git init")],-1),$=n("li",null,[n("p",null,"然后 git init")],-1),w=n("li",null,null,-1),K={href:"https://github.com/username/0821.git",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,[n("p",null,"这样就是 连接到了，")],-1),E=n("li",null,[n("p",null,"然后整-暂存区-本地库")],-1),B=l(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>git status
On branch master

No commits yet

Untracked files<span class="token operator">:</span>
  <span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to include in what will be committed<span class="token punctuation">)</span>
        test<span class="token punctuation">.</span>txt

nothing added to commit but untracked files <span class="token function">present</span> <span class="token punctuation">(</span>use <span class="token string">&quot;git add&quot;</span> to track<span class="token punctuation">)</span>

<span class="token operator">/</span><span class="token number">0821</span> <span class="token punctuation">(</span>master<span class="token punctuation">)</span>
$ git add test<span class="token punctuation">.</span>txt

<span class="token operator">/</span><span class="token number">0821</span> <span class="token punctuation">(</span>master<span class="token punctuation">)</span>
$ git commit <span class="token operator">-</span>m <span class="token string">&quot;first&quot;</span> test<span class="token punctuation">.</span>txt
<span class="token punctuation">[</span><span class="token function">master</span> <span class="token punctuation">(</span>root<span class="token operator">-</span>commit<span class="token punctuation">)</span> ecfbd47<span class="token punctuation">]</span> first
 <span class="token number">1</span> file changed<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token function">insertion</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span>
 create mode <span class="token number">100644</span> test<span class="token punctuation">.</span>txt

$ git push origin master
Enumerating objects<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>
Counting objects<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>
Writing objects<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">207</span> bytes <span class="token operator">|</span> <span class="token number">207.00</span> KiB<span class="token operator">/</span>s<span class="token punctuation">,</span> done<span class="token punctuation">.</span>
Total <span class="token number">3</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pack<span class="token operator">-</span>reused <span class="token number">0</span>
To https<span class="token operator">:</span><span class="token comment">//github.com/zben777/0821.git</span>
 <span class="token operator">*</span> <span class="token punctuation">[</span><span class="token keyword">new</span> branch<span class="token punctuation">]</span>      master <span class="token operator">-&gt;</span> master

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第二步-就是-github远程库已经有东西了" tabindex="-1"><a class="header-anchor" href="#第二步-就是-github远程库已经有东西了" aria-hidden="true">#</a> 第二步 就是 Github远程库已经有东西了</h2><ul><li><p>如果是 Github上已经有东西了的话 就必须 先进行 git clone</p></li><li><p>后面就是那样了</p></li></ul><h2 id="第三步-如果出现remote-错误仓库" tabindex="-1"><a class="header-anchor" href="#第三步-如果出现remote-错误仓库" aria-hidden="true">#</a> 第三步 如果出现remote 错误仓库</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
$ git add <span class="token punctuation">.</span>
$ git remote add origin 仓库链接
$ git remote add origin git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>username<span class="token operator">/</span>oldname<span class="token punctuation">.</span>git
fatal<span class="token operator">:</span> 远程 origin 已经存在。
$ git push <span class="token operator">-</span>u origin 分支名
error<span class="token operator">:</span> src refspec 分支名 does <span class="token operator">not</span> match any<span class="token punctuation">.</span>
error<span class="token operator">:</span> 无法推送一些引用到 <span class="token char">&#39;仓库链接&#39;</span>


$ git remote remove origin
$ git push <span class="token operator">-</span> u origin dyknng_z_dst
error<span class="token operator">:</span> src refspec u does <span class="token operator">not</span> match any<span class="token punctuation">.</span>
error<span class="token operator">:</span> src refspec origin does <span class="token operator">not</span> match any<span class="token punctuation">.</span>
error<span class="token operator">:</span> 无法推送一些引用到 <span class="token char">&#39;-&#39;</span>
Error <span class="token operator">:</span> Double subscripts<span class="token operator">:</span> use braces to clarify


$ git remote add origin git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>username<span class="token operator">/</span>oldname<span class="token punctuation">.</span>git
$ git remote remove origin
$ git remote add origin git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>username<span class="token operator">/</span>newname<span class="token punctuation">.</span>git
$ git init
重新初始化已存在的 Git 仓库于 <span class="token punctuation">.</span>git

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果您是指删除之前在 Git 中配置的错误仓库连接，以下是一些常见的方法：</p></li><li><p>查看已配置的远程仓库:在终端或命令提示符中，进入您的 Git 项目目录，然后运行以下命令：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git remote -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>这将显示您当前项目配置的所有远程仓库的名称和对应的 URL 。</p></li><li><p>删除远程仓库连接:要删除一个远程仓库连接，可以使用以下命令：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git remote remove &lt;remote_name&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其中 <code>&lt;remote_name&gt;</code> 是您要删除的远程仓库的名称（例如 <code>origin</code> ）</li></ul><h2 id="四、关于新电脑-ssh" tabindex="-1"><a class="header-anchor" href="#四、关于新电脑-ssh" aria-hidden="true">#</a> 四、关于新电脑 SSH</h2>`,11),N={href:"https://kimi.moonshot.cn/share/coccpesudu6796c2ofi0",target:"_blank",rel:"noopener noreferrer"},C=n("li",null,[n("p",null,"新的系统要重新生成密钥然后再进行链接到自己的github")],-1),L=n("li",null,[n("p",null,[n("mark",null,"以下是在新电脑上通过 SSH 连接到 GitHub 的一般步骤：")])],-1),T=l(`<ol><li><p>检查是否已安装 SSH 客户端：在大多数 Linux 和 macOS 系统中，SSH 客户端已默认安装。对于 Windows，您可以安装 Git for Windows，它包含 SSH 客户端。</p></li><li><p>生成 SSH 密钥对（如果尚未生成）：</p><ul><li>打开终端（Linux/macOS）或 Git Bash（Windows）。</li><li>运行以下命令：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请将 <code>your_email@example.com</code> 替换为您在 GitHub 上注册的电子邮件地址。</p><ul><li>按提示操作，通常可以直接按回车键使用默认值。</li></ul></li><li><p>找到生成的 SSH 公钥：</p><ul><li>在终端中，运行以下命令以查看公钥内容：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat ~/.ssh/id_rsa.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>复制显示的公钥内容。</li></ul></li><li><p>在 GitHub 上添加 SSH 公钥：</p><ul><li>登录到您的 GitHub 账户。</li><li>点击右上角您的头像，选择“Settings”（设置）。</li><li>在左侧菜单中，选择“SSH and GPG keys”（SSH 和 GPG 密钥）。</li><li>点击“New SSH key”（新 SSH 密钥）。</li><li>为密钥添加一个标题（例如您的电脑名称），将之前复制的公钥内容粘贴到“Key”（密钥）字段中。</li><li>点击“Add SSH key”（添加 SSH 密钥）。</li></ul></li><li><p>测试 SSH 连接：</p><ul><li>在终端中运行以下命令：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh -T git@github.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果看到类似 “Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.” 的消息，表示 SSH 连接成功。</li></ul></li></ol><p>完成以上步骤后，您就可以在新电脑上通过 SSH 与 GitHub 进行安全通信了。</p>`,2);function V(z,O){const i=o("ExternalLinkIcon"),e=o("router-link");return c(),r("div",null,[m,v,u(" more "),n("div",k,[b,h,n("ul",null,[g,n("li",null,[n("a",_,[s("vscode代码上传到github仓库"),a(i)])])])]),n("nav",f,[n("ul",null,[n("li",null,[a(e,{to:"#概述框架"},{default:t(()=>[s("概述框架")]),_:1})]),n("li",null,[a(e,{to:"#k-第尝试一下-1"},{default:t(()=>[s("K-第尝试一下")]),_:1})]),n("li",null,[a(e,{to:"#第一步-空仓库"},{default:t(()=>[s("第一步 空仓库")]),_:1})]),n("li",null,[a(e,{to:"#第二步-就是-github远程库已经有东西了"},{default:t(()=>[s("第二步 就是 Github远程库已经有东西了")]),_:1})]),n("li",null,[a(e,{to:"#第三步-如果出现remote-错误仓库"},{default:t(()=>[s("第三步 如果出现remote 错误仓库")]),_:1})]),n("li",null,[a(e,{to:"#四、关于新电脑-ssh"},{default:t(()=>[s("四、关于新电脑 SSH")]),_:1})])])]),x,n("ul",null,[S,H,G,y,$,w,n("li",null,[n("p",null,[s("然后创建 远程连接 别名：git remote add origin "),n("a",K,[s("https://github.com/username/0821.git"),a(i)])])]),q,E]),B,n("ul",null,[n("li",null,[n("p",null,[s("点击链接查看和 Kimi 智能助手的对话 "),n("a",N,[s("https://kimi.moonshot.cn/share/coccpesudu6796c2ofi0"),a(i)])])]),C,L]),T])}const A=p(d,[["render",V],["__file","K-第尝试一下.html.vue"]]);export{A as default};
