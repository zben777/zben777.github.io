import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,d as i,a as n,e as p,w as t,b as s,f as u}from"./app-2a2d189a.js";const k={},r=n("h1",{id:"f-topsis法-熵值法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#f-topsis法-熵值法","aria-hidden":"true"},"#"),s(" F-TOPSIS法 熵值法")],-1),d=n("p",null,"F-TOPSIS法 熵值法",-1),m={class:"table-of-contents"},v=u(`<h2 id="一、简单介绍" tabindex="-1"><a class="header-anchor" href="#一、简单介绍" aria-hidden="true">#</a> 一、简单介绍</h2><ul><li></li></ul><br><h2 id="二、注意事项" tabindex="-1"><a class="header-anchor" href="#二、注意事项" aria-hidden="true">#</a> 二、注意事项</h2><ul><li>更加 客观 计算 权重。 会忽略业务经验等</li><li>一个待评价事物（n个 特征 。各个特征 对于 评价这个事物 的 重要性。 只根据数据。</li><li>这个 熵权法 只是求 权重 的 客观的 topsis 则是 排序 的 两者结合则是在排序的时候加上权值<br><br></li></ul><h2 id="三、方法步骤" tabindex="-1"><a class="header-anchor" href="#三、方法步骤" aria-hidden="true">#</a> 三、方法步骤</h2><ol><li>将原始数据进行标准化处理</li><li>用熵值法计算各指标的权重</li><li>将权重和标准化的数据相乘后的数据作为topsis原始数据</li><li>用TOPSIS计算各评价对象与最优方案的接近程度Ci（即各样本的综合评价指数）</li><li>根据Ci进行排序，结合综合评价指数进行分析。</li></ol><br><h2 id="四、模型方程建立与求解" tabindex="-1"><a class="header-anchor" href="#四、模型方程建立与求解" aria-hidden="true">#</a> 四、模型方程建立与求解</h2><br><h2 id="五、案例分析" tabindex="-1"><a class="header-anchor" href="#五、案例分析" aria-hidden="true">#</a> 五、案例分析</h2><h3 id="dataprocess" tabindex="-1"><a class="header-anchor" href="#dataprocess" aria-hidden="true">#</a> dataProcess</h3><p>数据预处理：包括 正向化 以及 归一</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">% dataProcess.m  文件</span>

<span class="token keyword">function</span> y <span class="token operator">=</span> <span class="token function">dataProcess</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>way<span class="token punctuation">,</span>ind<span class="token punctuation">,</span>best<span class="token punctuation">)</span>
<span class="token comment">% @brief,dataProcess数据预处理函数，进行指标同向化一般选择指标正向化</span>
<span class="token comment">% @param,way指定归一化方式分别对应方式一二三</span>
<span class="token comment">% @param,x待处理的数据，x为n行m列的矩阵，其中行数表示样本数n，列表表示指标数m</span>
<span class="token comment">% @param,ind为数据的处理方式，长度为m；</span>
<span class="token comment">% ind(i)=0，表示第i个指标是极大型指标，不需要处理</span>
<span class="token comment">% ind(i)=1，表示第i个指标是极小型指标，采用取倒数或取相反数的方式处理</span>
<span class="token comment">% ind(i)=2，表示第i个指标是中间型指标（期望指标值既不要太大也不要太小，适当取中间值最好）</span>
<span class="token comment">% ind(i)=3，表示第i个指标是区间型指标（期望指标的取值最好落在某一个确定的区间最好）</span>
<span class="token comment">% @param,best为中间型或区间型指标的最佳取值范围，大小为m*2，若无则为0</span>
<span class="token punctuation">[</span>n<span class="token punctuation">,</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> nargin <span class="token operator">==</span> <span class="token number">1</span>
    way <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    ind <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    best <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">elseif</span> nargin <span class="token operator">==</span> <span class="token number">2</span>
    ind <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    best <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">elseif</span> nargin <span class="token operator">==</span> <span class="token number">3</span>
    best <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token comment">%% 将数据进行正向化</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m
    <span class="token keyword">if</span> <span class="token function">ind</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
        <span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">min_to_max</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">elseif</span> <span class="token function">ind</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span>
        <span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">mid_to_max</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">best</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">elseif</span> <span class="token function">ind</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span>
        <span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sec_to_max</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">best</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">best</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment">%% 将数据进行标准化</span>
<span class="token keyword">if</span> way <span class="token operator">==</span> <span class="token number">1</span>
<span class="token comment">%---------------- 方式一：一般归一化方法 ----------------</span>
    y <span class="token operator">=</span> x <span class="token operator">./</span> <span class="token function">repmat</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">% 这种写法等价于</span>
    <span class="token comment">% for i=1:n</span>
    <span class="token comment">%     for j=1:m</span>
    <span class="token comment">%         p(i,j)=y(i,j)/sum(y(:,j));</span>
    <span class="token comment">%     end</span>
    <span class="token comment">% end</span>

<span class="token comment">%---------------- 方式二：为了避免0的出现，归一化到某一范围内 ----------------</span>
<span class="token keyword">elseif</span> way <span class="token operator">==</span> <span class="token number">2</span>
    <span class="token comment">% 求每一行的最大值</span>
    xMax <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">% 求每一行的最小值</span>
    xMin <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">% 不归一化到[0,1]范围内，因为0不能求对数，这里取[0.002,0.996]</span>
    helperMax <span class="token operator">=</span> <span class="token number">0.996</span><span class="token punctuation">;</span>
    helperMin <span class="token operator">=</span> <span class="token number">0.002</span><span class="token punctuation">;</span>
    helper <span class="token operator">=</span> helperMax <span class="token operator">-</span> helperMin<span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m
        temp <span class="token operator">=</span> <span class="token function">xMax</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">xMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> helper<span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">xMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>temp <span class="token operator">+</span> helperMin<span class="token punctuation">;</span>
    <span class="token keyword">end</span>

<span class="token comment">%---------------- 方式三：向量规范化，即每一列元素都除以当前列向量的范数----------------</span>
<span class="token keyword">elseif</span> way <span class="token operator">==</span> <span class="token number">3</span>
    y <span class="token operator">=</span> x <span class="token operator">./</span> <span class="token function">repmat</span><span class="token punctuation">(</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token operator">.*</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">% 一般标准化</span>
<span class="token keyword">end</span>

<span class="token keyword">return</span><span class="token punctuation">;</span>

<span class="token keyword">end</span>

<span class="token keyword">function</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min_to_max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token comment">% 极小型指标：期望指标值越小越好（如患病率、死亡率等）</span>
    <span class="token comment">% 可以化成y=1/x(x&gt;0)或y=max(x)-x</span>
    y <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> x<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mid_to_max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>best<span class="token punctuation">)</span>
    <span class="token comment">% 中间型指标：期望指标值既不要太大也不要太小，适当取中间值最好（如水质量评估PH值）</span>
     M <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>x<span class="token operator">-</span>best<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     y <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">abs</span><span class="token punctuation">(</span>x<span class="token operator">-</span>best<span class="token punctuation">)</span> <span class="token operator">/</span> M<span class="token punctuation">;</span>
<span class="token comment">% 也可以写成</span>
<span class="token comment">%     Xmin = min(x);</span>
<span class="token comment">%     Xmax = max(x);</span>
<span class="token comment">%     Xmid = (Xmin+Xmax)/2;</span>
<span class="token comment">%     Xdiv = Xmax - Xmin;</span>
<span class="token comment">%     if x&gt;=Xmin &amp;&amp; x &lt;= Xmid</span>
<span class="token comment">%         y = 2*(x-Xmin)/Xdiv;</span>
<span class="token comment">%     else </span>
<span class="token comment">%         y = 2*(Xmax-x)/Xdiv;</span>
<span class="token comment">%     end</span>
<span class="token keyword">end</span> 

<span class="token keyword">function</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sec_to_max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>min_n<span class="token punctuation">,</span>max_n<span class="token punctuation">)</span>
    <span class="token comment">% 区间型指标：期望指标的取值最好落在某一个确定的区间最好（如体温）</span>
    <span class="token comment">% [min_n,max_n]为指标x的最佳稳定区间</span>
    n <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">% 行数，即为对象个数 </span>
    M <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">[</span>min_n<span class="token operator">-</span><span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">-</span>max_n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">% 最大容忍区间</span>
    y <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span> n
        <span class="token keyword">if</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> min_n
           <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">-</span><span class="token punctuation">(</span>min_n<span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>M<span class="token punctuation">;</span>
        <span class="token keyword">elseif</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> max_n
           <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span>max_n<span class="token punctuation">)</span><span class="token operator">/</span>M<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
           <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="entropyweight" tabindex="-1"><a class="header-anchor" href="#entropyweight" aria-hidden="true">#</a> entropyWeight</h3><p>这个可以得到 熵权法 的 各个指标的权值，以及这个情况下的 各个事件的得分。</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%entropyWeight,m</span>

<span class="token keyword">function</span> <span class="token punctuation">[</span>score<span class="token punctuation">,</span> weight<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">entropyWeight</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment">% 使用熵权法求数据行的得分及各指标（列）的权重</span>
<span class="token comment">% x为原始数据矩阵, 一行代表一个样本, 每列对应一个指标</span>
<span class="token comment">% ind指示向量，指示各列正向指标还是负向指标，1表示正向指标，2表示负向指标</span>
<span class="token comment">% score返回各行（样本）得分，weight返回各列权重</span>

<span class="token punctuation">[</span>n<span class="token punctuation">,</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">% 计算每个指标的熵值</span>
k <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
e <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
lnx <span class="token operator">=</span> <span class="token function">Myln</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m
    <span class="token function">e</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span>k <span class="token operator">*</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">lnx</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token comment">% 计算熵冗余度</span>
d <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span> <span class="token operator">-</span> e<span class="token punctuation">;</span>
<span class="token comment">% 计算权值</span>
weight <span class="token operator">=</span> d<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">% 计算综合得分</span>
score <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> weight <span class="token operator">*</span> x<span class="token operator">&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> lnx <span class="token operator">=</span> <span class="token function">Myln</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token comment">% 方法一和方法二都可能会出现y=0的情况需要特别对出现0的情况进行处理</span>
    lnx <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">lnx</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">lnx</span><span class="token punctuation">(</span>x<span class="token operator">~=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>x<span class="token operator">~=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="topsis" tabindex="-1"><a class="header-anchor" href="#topsis" aria-hidden="true">#</a> topsis</h3><p>这个就是 根据第一步 得到的 权值利用 了</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">function</span> <span class="token punctuation">[</span>sorted_S<span class="token punctuation">,</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">topsis</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>weights<span class="token punctuation">)</span>
<span class="token comment">% 求解TOPSIS算法</span>
<span class="token comment">% X={x1,x2,..,xn}，原始数据集，这里取归一化之后的数据,有m个指标；有n个样本</span>
<span class="token comment">% weights={w1,w2,...wn}，各指标权重；</span>
<span class="token punctuation">[</span>n<span class="token punctuation">,</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">%% 计算各平均对象与最优方案、最劣方案的接近程度</span>
yMax <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
yMin <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

DMax <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
DMin <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Score <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m
        <span class="token function">DMax</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">DMax</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">weights</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">yMax</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token function">DMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">DMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">weights</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">yMin</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    <span class="token function">Score</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">DMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token function">DMax</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">DMin</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token comment">%% 计算各评价对象与最优方案的贴近程度</span>
<span class="token comment">% 其中0&lt;=C&lt;=1，C越接近与1，说明评价对象越优</span>
StandScore <span class="token operator">=</span> Score <span class="token operator">/</span> <span class="token function">sum</span><span class="token punctuation">(</span>Score<span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">%% 根据C的大小进行排序，得出评价结果</span>
<span class="token punctuation">[</span>sorted_S<span class="token punctuation">,</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span>StandScore <span class="token punctuation">,</span><span class="token string">&#39;descend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main" tabindex="-1"><a class="header-anchor" href="#main" aria-hidden="true">#</a> main</h3><p>进行预处理后的 数据的读入 以及 进行 得到选择方式的利用</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>clc<span class="token punctuation">;</span>
clear<span class="token punctuation">;</span>

<span class="token comment">%% 第一步：导入数据</span>
load data_water_quality<span class="token punctuation">.</span>mat

<span class="token comment">%% 第二步：熵权法计算，采用一般归一化方法 ，这里的 score 是权值*归一化后的数据</span>

p<span class="token operator">=</span><span class="token function">dataProcess</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>score<span class="token punctuation">,</span> weight<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">entropyWeight</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">%% 第三步：TOPSIS法计算，采用向量规范化（亦可以选择归一化方法。</span>
X <span class="token operator">=</span> <span class="token function">dataProcess</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>sorted_S<span class="token punctuation">,</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">topsis</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>weight<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,24);function b(f,x){const a=o("router-link");return c(),l("div",null,[r,d,i(" more "),n("nav",m,[n("ul",null,[n("li",null,[p(a,{to:"#一、简单介绍"},{default:t(()=>[s("一、简单介绍")]),_:1})]),n("li",null,[p(a,{to:"#二、注意事项"},{default:t(()=>[s("二、注意事项")]),_:1})]),n("li",null,[p(a,{to:"#三、方法步骤"},{default:t(()=>[s("三、方法步骤")]),_:1})]),n("li",null,[p(a,{to:"#四、模型方程建立与求解"},{default:t(()=>[s("四、模型方程建立与求解")]),_:1})]),n("li",null,[p(a,{to:"#五、案例分析"},{default:t(()=>[s("五、案例分析")]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#dataprocess"},{default:t(()=>[s("dataProcess")]),_:1})]),n("li",null,[p(a,{to:"#entropyweight"},{default:t(()=>[s("entropyWeight")]),_:1})]),n("li",null,[p(a,{to:"#topsis"},{default:t(()=>[s("topsis")]),_:1})]),n("li",null,[p(a,{to:"#main"},{default:t(()=>[s("main")]),_:1})])])])])]),v])}const w=e(k,[["render",b],["__file","F-TOPSIS法 熵值法.html.vue"]]);export{w as default};
