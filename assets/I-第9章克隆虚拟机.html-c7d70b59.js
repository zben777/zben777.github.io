import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c as r,d as p,a as e,e as a,w as i,b as o,f as c}from"./app-2a2d189a.js";const d={},h=e("h1",{id:"i-第9章克隆虚拟机",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i-第9章克隆虚拟机","aria-hidden":"true"},"#"),o(" I-第9章克隆虚拟机")],-1),_=e("p",null,"I-第9章克隆虚拟机",-1),m=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"说明"),e("p",null,"主要是各种搜索找的学习；")],-1),u={class:"table-of-contents"},f=c('<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="概述框架" tabindex="-1"><a class="header-anchor" href="#概述框架" aria-hidden="true">#</a> 概述框架</h2><h2 id="i-第9章克隆虚拟机-1" tabindex="-1"><a class="header-anchor" href="#i-第9章克隆虚拟机-1" aria-hidden="true">#</a> I-第9章克隆虚拟机</h2><ul><li><p>接下来，介绍在实际应用中较为常见的操作——克隆虚拟机。所谓克隆，即复制，将当前的机器完整地复制一份。其使用场景主要在于大数据应用场景中，通常需构建服务器集群，而这些服务器的配置本质上较为相似，因为在构建集群时，不区分彼此，让其平等地进行分布式计算和操作，所以它们的基本配置相同。最好的方法是将一台完整配置好的机器，直接复制多份，从而扩展出集群。这在大数据的学习和测试过程中非常有用。</p></li><li><p>当然，虚拟机克隆主要用于学习和测试。在实际生产应用环境中，使用的不是虚拟机而是实体机，就不能简单地直接克隆，只能对每台机器单独进行配置。</p></li><li><p>接下来，由于使用的是虚拟机，Vmware 软件为我们提供了更方便快捷的克隆虚拟机方式。操作很简单，首先在当前机器上右键点击，在管理选项中有“克隆”，点击后会打开克隆虚拟机的向导。但会提示无法克隆，没有下一页，原因是当前机器处于开机状态，无法进行克隆，需先关机。关机后，再次点击管理中的克隆进行复制。</p></li><li><p>接下来，要选择克隆的来源，是当前状态还是快照，当前只能选择当前状态完整复制。克隆方法有两种，一是创建链接克隆，二是创建完整克隆。两者的区别在于，完整克隆是原封不动地复制机器的所有内容；链接克隆则类似于快捷方式，是对原始虚拟机的引用，优点是占用磁盘空间少，缺点是依赖原始虚拟机，若原始虚拟机出现故障，克隆机无法使用。一般为保证稳定性，若要搭建集群，创建完整克隆更好。</p></li><li><p>然后点击下一页，为虚拟机命名，比如之前叫“hadoop_base”，现在可以叫“hadoop_copy1”。接着选择位置，之前放在 D 盘“VM”目录下，现在可在“VM”下新建一个“hadoop_copy”文件夹。完成设置后，即可创建克隆体。克隆过程本质上是文件复制，速度很快。完成后，会出现“hadoop_copy1”，可直接开启这台虚拟机。</p></li><li><p>开启后，思考登录用户是谁，与之前相同，有 root 用户和 atguigu 用户，根据需求选择登录身份。等待完全启动，用 root 用户登录，密码相同。</p></li><li><p>进入当前机器后，会发现与之前机器状态完全相同，包括之前更新过的 Firefox 图标。接下来要进行更改，因为构建集群时，不能完全相同。所有系统配置和文件资料可以相同，但彼此通信时，IP 地址和主机名不能一样。此时，打开终端并放大，先查看当前 IP ，使用“ipconfig”命令。由于是复制过来的，IP 地址完全相同，都是 192.168.111.100 ，虚拟网络地址也相同。现在需要更改配置文件，记得之前的配置文件在“/etc/sysconfig/network-scripts/”下，要更改的是“ifcfg ens33”文件中的静态 IP 地址，直接在最后进行更改，比如改为 101 ，然后“wq”保存。</p></li><li><p>更改完成后，需重启网络服务。先查看当前网络服务状态，“systemctl network status network”，显示为“active”但“exit”，因为 CentOS 7 中默认的网络服务是“network manager”。为保险起见，先“stop”当前的“network”服务，然后“restart”“network manager”服务。重启后，“ipconfig”查看 IP ，已变为 192.168.111.101 。确认能否与主机通信，在同一网段，ping 192.168.111.1 能通，ping 外网百度也通，网络配置完成。</p></li><li><p>另外，主机名也叫“hadoop100”，需要更改。主机名配置文件在“/etc/hostname”，先查看“get hostname”，更改后可能需要重启机器或其他服务。在 CentOS 7 中，有“hostnamectl”系统管理工具，可直接“set hostname”，比如设置为“hadoop101”，再次“get”或查看当前主机名，已变为“hadoop101”。若显示还是“hadoop100”，是因为当前终端的缘故，重新打开就会变成“hadoop101”。</p></li><li><p>这样，IP 改为 101 ，主机名也改为 101 ，构建集群时就与原始的 100 完全分开。接下来，可在 Xshell 中进行远程连接。之前的“hadoop100”因关机已断开，新建会话“hadoop101”，端口 22 ，以 root 身份登录。能否成功访问主要看之前 Windows 中的“hosts”文件是否保存了 101 对应的 IP 。在 Windows 中，“hosts”文件在“Windows/system32/drivers/etc”目录下，确认当时已写入 101 、 102 、 103 、 104 等。不光 Windows 有保存，Linux 中也有对应保存。新建会话连接，接受并保存 SSH 主机密钥，成功登录，登录的机器是“hadoop101”。在机器中创建一个“hello2”文件，在虚拟机中能看到该文件，说明操作的是克隆出来的新机器。</p></li><li><p>之后可克隆多台机器构建完整集群。在 Vmware 中，不仅能克隆，还能进行快照操作。给当前机器拍快照，好处是若机器后续被搞乱或崩溃，可通过快照恢复到保存的重要节点。通常在重要阶段性状态或进行危险操作前，可给机器拍快照。</p></li><li><p>另外，若在本机想再克隆机器，或换电脑使用当前虚拟机配置，可直接到对应的保存目录，拷贝所有文件，在另一台电脑上用 Vmware 打开，主要需要 Vmware 的配置文件，如“.vmx”或“.vmtm”等，拷贝这些文件，即可复制虚拟机。此操作简单，对后续大数据学习很有帮助，可尝试操作。</p></li></ul>',4);function w(I,g){const t=s("router-link");return l(),r("div",null,[h,_,p(" more "),m,e("nav",u,[e("ul",null,[e("li",null,[a(t,{to:"#概述框架"},{default:i(()=>[o("概述框架")]),_:1})]),e("li",null,[a(t,{to:"#i-第9章克隆虚拟机-1"},{default:i(()=>[o("I-第9章克隆虚拟机")]),_:1})])])]),f])}const k=n(d,[["render",w],["__file","I-第9章克隆虚拟机.html.vue"]]);export{k as default};
