import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as n,c as t,d as u,a as e,e as r,w as i,b as o,f as c}from"./app-2a2d189a.js";const d={},m=e("h1",{id:"c-ubuntu服务器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-ubuntu服务器","aria-hidden":"true"},"#"),o(" C-Ubuntu服务器")],-1),h=e("p",null,"C-Ubuntu服务器",-1),k=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"说明"),e("ul",null,[e("li",null,"关于Ubuntu系统上的服务器的一些操作陷阱；")])],-1),p={class:"table-of-contents"},w=c('<h2 id="一、简单介绍" tabindex="-1"><a class="header-anchor" href="#一、简单介绍" aria-hidden="true">#</a> 一、简单介绍</h2><p><mark>VScode进行远程连接服务器</mark></p><ul><li>这个可以先看个CSDN进行观看。</li><li></li><li></li></ul><br><ul><li><mark>服务器上 vscode ctrl+鼠标点击无法跳转</mark></li><li>需要在扩展上再次添加 c/c++</li></ul><br><h2 id="二、内存方面" tabindex="-1"><a class="header-anchor" href="#二、内存方面" aria-hidden="true">#</a> 二、内存方面</h2><p><mark>通过软链接减少/home的内存</mark></p><p>==主要是 通过软链接 将工作区的东西软连接到/home/user 里面 即类似减少Windows的C盘存储 ==</p><ul><li>假设是这样 ln -s /workspace/A /home/B；那么如果在B的目录下创建文件，会出现什么情况？即比如在B的目录下创建一个文件C大小为10M，那么这个10M占据磁盘空间在A那里还是B那里？会发生什么情况？</li><li>假设您执行了以下命令：</li><li>ln -s /workspace/A /home/B</li><li>这个命令创建了一个名为 B 的软链接在 /home/ 目录下，该软链接指向 /workspace/A 目录。现在，如果您通过 B 这个软链接在所谓的“B的目录下”创建了一个文件 C 大小为10M，实际上您是在 /workspace/A 目录下创建了这个文件。</li><li>这里的关键是理解“B的目录”实际上是指 /workspace/A，因为 B 只是一个指向 /workspace/A 的软链接。所以，当您在“B的目录下”创建文件时，您实际上是在操作 /workspace/A 目录。</li><li>关于磁盘空间的使用： <ul><li>文件 C（大小为10M）会占用 /workspace/A 目录所在文件系统的磁盘空间。</li><li>软链接 B 本身几乎不占用磁盘空间，它只是包含了指向 /workspace/A 的路径字符串。</li></ul></li><li>因此，这个10M的磁盘空间是在 /workspace/A 那里占据的，而不是在 /home/B。B 只是一个指向 A 的引用，它本身不存储任何文件内容</li><li>总结一下发生的情况：</li><li>1、创建了一个名为 B 的软链接在 /home/ 下，指向 /workspace/A。<br> 2、通过 B 这个软链接在 /workspace/A 目录下创建了一个文件 C，大小为10M。<br> 3、这10M的磁盘空间是在 /workspace/A 所在的文件系统上占用的。<br> 4、软链接 B 不影响文件存储的位置或磁盘空间的使用。</li></ul><br><p><mark>先是内存方面</mark></p><ul><li>可以先用 df -h 为查看各个文件的存储</li><li>htop查看线程的东西，q退出</li><li>不要删除任何东西因为可能是软链接</li><li>可以软链接到整个文件夹。</li></ul><br><ul><li>也就是说对于Ubuntu来说，/home是windows的C盘，然后/home/user/桌面 这样下去是C盘内容，然后如果是/media 这样的话， media就是跟home是并行的，即相当于windows的D盘是这样吗？</li><li>在Ubuntu（以及其他Linux发行版）中，/home 目录是用来存放所有用户个人文件和配置的地方，它相当于Windows系统中的用户文件夹，如C盘的Users目录。每个用户的主目录通常位于/home下，并以用户名命名，比如/home/user。所以，/home/user/Desktop 对应于Windows下的 C:\\Users\\user\\Desktop。<br> 而 /media 目录则用来挂载外部存储设备，如U盘、移动硬盘或DVD等，当这些设备插入时，系统会在 /media 或其子目录下自动创建挂载点来访问它们的内容。这个目录并不是直接对应于Windows系统的D盘或其他逻辑分区，而是与Windows资源管理器中显示的可移动磁盘功能类似。<br> 在Linux中，硬盘分区可以被挂载到任意目录，而不仅仅是/home或/media，这些分区并不像Windows那样通过盘符（如C盘、D盘）来标识，而是通过挂载点路径来指定。因此，如果您有一个额外的分区用于数据存储，它可能会被挂载到类似于/mnt/data这样的位置，这取决于您的设置和需求，并不能简单地类比为Windows的某个盘符。</li></ul><br><ul><li>那是不是可以在/下建立一个工作区，然后再在/home/user 下的某个文件夹内进行软链接？</li><li>是的，您可以在Linux系统的根目录/下创建一个工作区目录（例如：/workarea），然后在/home/user/下的某个文件夹内通过软链接（Symbolic Link）指向这个工作区。<br> 软链接类似于Windows系统中的快捷方式，它允许你在任意位置通过链接文件访问目标文件或目录。创建软链接的命令是 ln -s，示例如下：<br> Bash<br> 假设要在/home/user/Documents/下创建一个到/workarea的软链接<br> sudo mkdir /workarea<br> ln -s /workarea /home/user/Documents/myWorkArea<br> 这样，当你访问 /home/user/Documents/myWorkArea 时，实际上就是在访问 /workarea 目录下的内容。</li></ul>',17);function b(_,B){const l=s("router-link");return n(),t("div",null,[m,h,u(" more "),k,e("nav",p,[e("ul",null,[e("li",null,[r(l,{to:"#一、简单介绍"},{default:i(()=>[o("一、简单介绍")]),_:1})]),e("li",null,[r(l,{to:"#二、内存方面"},{default:i(()=>[o("二、内存方面")]),_:1})])])]),w])}const A=a(d,[["render",b],["__file","C-Ubuntu服务器.html.vue"]]);export{A as default};
