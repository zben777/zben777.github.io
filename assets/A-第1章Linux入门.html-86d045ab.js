import{_ as x}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as t,c as L,d as p,a as i,e as u,w as e,b as n,f as r}from"./app-2a2d189a.js";const d="/assets/figure1-1-478b3043.png",s="/assets/figure1-2-b2439010.png",o={},U=i("h1",{id:"a-第1章linux入门",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#a-第1章linux入门","aria-hidden":"true"},"#"),n(" A-第1章Linux入门")],-1),h=i("p",null,"A-第1章Linux入门",-1),c=i("div",{class:"hint-container info"},[i("p",{class:"hint-container-title"},"说明"),i("p",null,"主要是各种搜索找的学习；")],-1),S={class:"table-of-contents"},b=r('<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="概述框架" tabindex="-1"><a class="header-anchor" href="#概述框架" aria-hidden="true">#</a> 概述框架</h2><h2 id="a-第1章linux入门-1" tabindex="-1"><a class="header-anchor" href="#a-第1章linux入门-1" aria-hidden="true">#</a> A-第1章Linux入门</h2><h2 id="一、整体介绍" tabindex="-1"><a class="header-anchor" href="#一、整体介绍" aria-hidden="true">#</a> 一、整体介绍</h2><h3 id="_1、课程引入" tabindex="-1"><a class="header-anchor" href="#_1、课程引入" aria-hidden="true">#</a> 1、课程引入</h3><ul><li>本课程要学习的是著名的 Linux 操作系统。首先对这门课进行整体的简单介绍。</li><li>Linux 是一个广为人知的操作系统。操作系统通常安装在电脑上，而在当前的 IT 行业中，各企业的应用服务大多跑在服务器上，服务器可视为性能强大的特殊电脑，其操作系统绝大多数为 Linux。因此，若与服务器打交道，无论是后台开发、大数据分析、测试还是运维，都必须了解 Linux。</li></ul><h3 id="_2、就业方向" tabindex="-1"><a class="header-anchor" href="#_2、就业方向" aria-hidden="true">#</a> 2、就业方向</h3><ul><li><p>学习 Linux 后能从事的工作多样。企业服务器多为 Linux 系统，基于此的服务器运行维护和管理工作，即运维工程师，这是一大就业方向。运维包括系统运维、应用运维等，数据库管理员（DBA）也可归为运维一类，他们的操作通常基于 Linux 环境。</p></li><li><p>此外，还可基于 Linux 进行相关开发工作，如 Linux 内核驱动开发、基于 Linux 软件的开发，以及嵌入式开发。嵌入式开发往往针对特定需求在较简单硬件上进行，可能使用简化版 Linux，有时涉及驱动开发，偏底层，常用语言为 C 或 C++。</p></li><li><p>即便不是专业运维、开发或嵌入式工程师，普通后台开发、Java 开发、大数据处理与分析人员，只要与服务器接触，都需了解 Linux。若能力达一定层次成为架构师，无论是系统架构师、网络架构师还是运维架构师，都必须熟悉底层 Linux 。架构师常遇性能调优、故障处理等问题，不了解底层则无法解决。</p></li><li><p>在 IT 行业，如 Web 应用、数据库开发与维护、大数据云计算、物联网开发等领域，都需用到 Linux 相关知识。大数据云计算面对服务器集群，要进行管理维护，需深入了解底层，甚至手写脚本。可以说，Linux 是高级程序员必备技能，无论从事何种工作，对 Linux 的了解都很必要。<br> 而且，学习 Linux 后，为电脑安装系统时多了选择，可安装 Linux 作为操作系统，其有美观的桌面环境，支持多数语言开发，可用作工作电脑。<br><img src="'+d+'" alt="figure1-1" loading="lazy"></p></li></ul><h3 id="_3、课程内容安排" tabindex="-1"><a class="header-anchor" href="#_3、课程内容安排" aria-hidden="true">#</a> 3、课程内容安排</h3><ul><li><p>本课程整体分为四个部分：入门篇、基础篇、实操篇和扩展篇。</p></li><li><p>入门篇主要讲述 Linux 是什么、其发展变化的故事和渊源，创建虚拟机并安装 Linux 系统，以入门并上手使用。</p></li><li><p>基础篇介绍 Linux 的基本操作，包括文件和目录结构、文本编辑器、网络配置、系统管理、远程登录等，掌握这些知识后可操作虚拟机。</p></li><li><p>实操篇实战性强，讲解大量常用命令，掌握后可在日常应用中玩转 Linux 。</p></li><li><p>扩展篇针对实际应用扩展，如 Linux 下的软件包管理、克隆虚拟机，以及重点讲解 shell 编程构建 shell 脚本。在运维工作中，shell 脚本非常重要，不会写 shell 脚本的程序员不是好运维。<br><img src="'+s+'" alt="figure1-2" loading="lazy"></p></li></ul><h3 id="_4、课程特色" tabindex="-1"><a class="header-anchor" href="#_4、课程特色" aria-hidden="true">#</a> 4、课程特色</h3><ul><li>本课程选用的 Linux 发行版本是 CentOS 7 ，这是国内企业应用中常见的 Linux 发行版，使用的是最新的 7.9 版本。课程易上手，不涉及过深内容，如 Linux 内核、源码等，技术小白也能学习。课程对常用命令有详细讲解，学完基本掌握所需 Linux 知识。</li><li>Linux 是当今程序员必备技术，学习过程中要理论联系实际，多敲命令、多做测试，以充分掌握其用法。</li><li>接下来，正式开启 Linux 的学习。</li></ul><h2 id="二、linux-入门篇" tabindex="-1"><a class="header-anchor" href="#二、linux-入门篇" aria-hidden="true">#</a> 二、Linux 入门篇</h2><ul><li><p>正式开始 Linux 的学习，首先是入门篇，先对 Linux 进行概述，了解其是什么以及如何产生，此过程中有许多有趣的故事，还涉及不少 IT 界大神，这部分可抱着听故事的心态，对 Linux 有整体的了解。</p></li><li><p>首先要明确 Linux 是什么。其实它是一个操作系统（Operating System，缩写为 OS），常在很多地方看到 OS 缩写，其代表的就是操作系统。所谓操作系统，是直接操作计算机底层硬件的软件，是最底层的软件。若有同学自己组装电脑，组装好硬件后的第一件事就是安装操作系统。最熟悉的操作系统当属 Windows，从早期的 Windows XP 到 Win 7、Win 10，再到如今的 Win 11，都很熟悉。个人电脑一般使用 Windows 操作系统。若使用苹果电脑，操作系统则是 Mac OS，早期可能叫 Mac OS X，如今统一称为 Mac OS，这与 Windows 是完全不同的操作系统。而现在所说的 Linux，是与 Windows、Mac OS 并驾齐驱的另一种操作系统。<br> 关于 Linux 单词的发音，每个人的读法各异，比如读作“Linux”或“Linus”等，这不重要，知道所指且能互相听懂即可。个人习惯将其读作“Linux”，后续提及此操作系统时，都以此发音。</p></li><li><p>这里可以看到，Linux 的图标是一只企鹅，这只企鹅有名字，叫“TUX”，“TUX”在英语里有晚礼服的意思，所以这是一只穿着晚礼服的企鹅。不过这只企鹅看起来有点奇怪，提到企鹅，自然会想到腾讯 QQ 那只著名的企鹅，这只企鹅与 QQ 那只萌萌哒的企鹅不同，它是两只脚岔开坐在地上，看起来没什么精神。这就要从 Linux 的诞生说起。</p></li><li><p>要讲 Linux 的诞生，必须提到一个人，即传说中的“Linux 之父”——李纳斯·托瓦兹（Linus Torvalds），当然翻译可能不同，也有人称其为“李纳斯”，名字不重要。李纳斯自称长相丑陋，不过发量看起来还行。但别小瞧他，他是不折不扣的大神，是程序员中的传奇，一人写出了最初的 Linux 版本，还是在上大学时完成，20 出头就做了此事。</p></li><li><p>Linux 的诞生比较偶然，充满戏剧性。一个大学生不太可能一开始就想开发一套操作系统。李纳斯有技术基础，从小有黑客潜质，中学时就熟练掌握汇编语言，也直接用机器码写过程序。上世纪 90 年代，李纳斯上大学，期间对当时著名的操作系统 Unix 产生浓厚兴趣。Unix 简洁高效，但源码未开放，李纳斯无法查看底层实现。基于 Unix，有人开发出变种 Minix，其源码开放，可供研究学习。1991 年初，李纳斯开始基于 Minix 进行开发工作，起初只是想解决 Minix 的不足，替代其部分功能，进行优化改进，结果越写越多，最后干脆重写系统。就这样，1991 年 6 月他决定做此事，不断编写，到 9 月，写了约一万行代码时，操作系统内核的 0.01 版本基本完成，李纳斯将其命名为 Linux。关于 Linux 名字的由来，有人认为它是李纳斯的类似于 Unix 的操作系统，发音因人而异，个人习惯读作“Linux”，读起来更顺口，大家可按自己习惯选择。</p></li><li><p>李纳斯完成 Linux 0.01 版本后，不仅发布了代码，还公开了整个系统的源代码。此举动非常伟大，这就是开源，他让大家随意下载、阅读和更改源代码。从此，很多人基于此内核添砖加瓦、进行改进，内核不断完善，发展至今成为伟大的项目，这便是 Linux 的诞生。</p></li></ul><h2 id="三、linux-和-unix-的渊源" tabindex="-1"><a class="header-anchor" href="#三、linux-和-unix-的渊源" aria-hidden="true">#</a> 三、Linux 和 Unix 的渊源</h2><ul><li><p>之前提到，Linux 的诞生起源于李纳斯对 Unix 系统的兴趣。Unix 操作系统非常有名，诞生得也很早，可谓是当今众多操作系统的鼻祖，对后续计算机领域操作系统的发展产生了深远影响，直至今日。因此，作为程序员和 IT 从业人员，有必要了解 Unix。接下来讲述 Linux 和 Unix 的渊源。</p></li><li><p>Unix 是如何产生的？首先要提到一个著名的实验室——贝尔实验室，想必大家都有所耳闻。贝尔实验室有众多发明专利和技术发明，深刻影响着如今的生活，比如晶体管、激光、LED、交换机、通讯卫星等，与电子化、信息化生活息息相关。在贝尔实验室里，有很多大神，甚至不乏诺贝尔奖、图灵奖获得者。今天要介绍的是两位大神，一位叫肯·汤普森（Ken Thompson），另一位叫丹尼斯·里奇（Dennis Ritchie），他们在整个计算机领域大名鼎鼎。看这两位的发量和大脑门，显然是大神级别的人物。</p></li><li><p>Unix 操作系统主要由肯·汤普森牵头，与丹尼斯·里奇携手创造。Unix 系统的技术来源最早可追溯到另一个工程——Multics。Multics 项目更早，始于 1965 年，当时计算机刚发明兴起，所用的操作系统是批处理操作系统，即准备好数据后统一批量处理，这种处理方式效率较低。Multics 项目由贝尔实验室、MIT 和通用电信公司联合发起，旨在开发一个新的多用户分时操作系统，简单来说，就是能同时为多个用户提供服务，通过时间片轮转实现。这涉及众多复杂的技术细节，由于 Multics 工程计划追求的目标过于庞大和复杂，最终很多开发人员都不清楚最终要做成什么样，Multics 以失败告终。</p></li><li><p>然而，失败是成功之母。以肯·汤普森为首的一些贝尔实验室研究人员吸取了 Multics 失败的经验教训，于 1969 年真正实现了一个分时操作系统的雏形。1970 年，这个新的分时操作系统被称为 Unix。从名字上也能看出它与 Multics 的区别，我们知道“Multics”在英语里有“多”“复杂”的意思，而“Unix”中的“Uni”有“单独”“独立”的意思，相对而言，Unix 更加简洁小巧。肯·汤普森和丹尼斯·里奇最初设计 Unix 时的简单思路是保留最基本的功能，追求简洁高效，这一理念一直影响到后来的 Linux。</p></li><li><p>最早，Unix 直接用汇编语言编写，即前面提到的底层语言向机器传输指令。我们知道，汇编语言很底层，开发起来非常麻烦、低效且痛苦。丹尼斯·里奇和肯·汤普森都觉得用汇编语言写程序、开发系统太痛苦，程序员要为自己的发量着想，所以决定开发一种高级语言，将要做的事情抽象出来，用高级描述让程序员使用更方便。于是，他们开始进行语言开发。这就是大神做的事，开发系统时工具不顺手，就顺便发明一门新语言。</p></li><li><p>一开始，他们没想到直接发明新语言。可能有同学听说过早期有一个用于科学计算的经典老语言叫 Fortran。一般来说，不要重复造轮子，有现成能用的就拿来用。但 Fortran 不太适合当时要设计的复杂系统，直接失败了。Fortran 不好用没关系，那就自己开发。于是，两位大神准备自己写高级语言，这个过程由丹尼斯·里奇主导。</p></li><li><p>丹尼斯·里奇首先创造出的高级语言叫 B 语言，因为它基于当时的另一门语言 BCPL 创建，所以直接命名为 B 语言。B 语言在当时可认为是一种解释型语言，不是直接生成机器码，而是解释执行，效率无法满足底层操作系统的需求，所以 B 语言再次失败。</p></li><li><p>失败是成功之母，继续改进。丹尼斯·里奇对 B 语言进行一系列改进，为其增加更丰富的数据类型，使其能直接编译为机器码，还为这门语言起了一个响亮的名字叫“New B”。一听这名字就很响亮，也许是因为名字响亮，这次终于成功了。</p></li><li><p>丹尼斯·里奇和肯·汤普森使用他们发明创造的“New B”语言对 Unix 整个系统进行了重写和重构。也有可能是丹尼斯·里奇考虑到未来中国人民听到这个名字不太文雅，所以他们想，新的 B 语言，干脆用 B 的下一个字母表示这门新语言，于是，传说中的 C 语言诞生了。</p></li><li><p>我们知道，未来这门 C 语言将统治大学课本。只要是计算机相关专业、电子信息相关专业，都要学习这门经典的 C 语言。而且，在其诞生近 50 年后的今天，C 语言依然位居编程语言排行榜前列。C 语言非常厉害，或许是名字起得好。最终，肯·汤普森和丹尼斯·里奇用 C 语言重新编写了 Unix 的内核。</p></li><li><p>Unix 和 C 语言珠联璧合，双双走进计算机发展领域的殿堂。Unix 成为之后几乎所有操作系统的思想来源，而 C 语言作为最接近底层的高级语言，大放异彩，至今仍在很多地方被使用。这便是 Unix 的诞生。</p></li></ul><h2 id="四、unix-及其相关系统" tabindex="-1"><a class="header-anchor" href="#四、unix-及其相关系统" aria-hidden="true">#</a> 四、Unix 及其相关系统</h2><ul><li><p>Unix 非常牛，其运行性能高效且稳定，是目前为数不多能达到高性能、大型主机可靠性要求的系统。因此，像银行、金融业等包含重要数据的大型服务器，目前运行的系统依然基于 Unix。</p></li><li><p>由于 Unix 并非开源免费软件，早期虽类似开源以推广，后为商业化收回版权，一般只有大型商业公司会购买 Unix 版权开发性能强悍的大型主机服务器。随之出现了各种商业版本的 Unix 发行版，目前常见的有：</p></li><li><p>Solaris，这是 Sun 公司开发的重要 Unix 分支。Solaris 一度占据大量市场，原叫 Sun Solaris，Sun 公司被 Oracle 收购后，就称为 Oracle Solaris。但 Solaris Unix 主要运行在高性能主机上，严重依赖硬件。如今，服务器性能增强，企业不再部署单节点高性能主机，而是构建集群，用普通微机或个人电脑安装 Linux 系统作服务器。这是当前发展趋势，因此，Solaris 逐渐被 Oracle Linux 替代，许多人为之惋惜，因其曾是好用的系统。</p></li><li><p>不仅 Sun 公司的 Solaris，IBM 也有对应的 Unix 版本，叫 IBM AIX，主要运行在 IBM 的 P 系列小型机（Power 系列）里。此外，惠普公司有 UX 系统，运行在惠普的大型服务器里。这些系统主要运行在高性能大型机上，因对硬件依赖严重，如今应用渐少。</p></li><li><p>时至今日，仍保持发展活力且广泛应用的 Unix 分支，值得一提的是 BSD。BSD 是缩写，全称是 Berkeley Software Distribution，意为伯克利软件套件，是美国加州大学伯克利分校开发的 Unix 版本，此版本非常重要，基于它衍生出了 FreeBSD 版本。从名字可知，这是免费开源的自由软件，可随意使用。本质上，FreeBSD 与 Linux 有相似之处，由世界各地志愿者开发维护，能为不同架构计算机系统提供不同程度支持。不过，FreeBSD 诞生晚于 Linux，1993 年 12 月发布 1.0 版本，<br> 因版权纠纷，直到 1995 年才发布 2.1 版本。此过程中，Linux 发展迅猛，未受 FreeBSD 太大影响，但 FreeBSD 也有优点，得到广泛应用和发展。</p></li><li><p>这主要归因于 BSD 协议，FreeBSD 基于 BSD 许可协议发布。与 Linux 遵循的发布协议不同，简单来说，Linux 可阅读源码、修改并自行发布，但有限制，若使用基于 Linux 内核的开源免费软件并做更改发布，需公开开发代码，即使用 Linux 则开发成果也须开源。而 FreeBSD 的 BSD 协议限制更少，所有人可查看源码、随意使用更改、发布更改后的代码，还可将其包装为商业软件。因此，FreeBSD 协议更便于软件商业化。基于 FreeBSD，并借鉴其内容，发展出一个新系统叫 Darwin，是苹果公司后来 Mac OS X 的前身，Mac OS X 基于 FreeBSD 发展而来，现称为 macOS。当然，关于 FreeBSD、Darwin 及苹果的 OS X 等系统的发展变化，都是后话。</p></li><li><p>在上世纪 80 年代 90 年代，Unix 闭源有版权，属商业软件，其商业发行版价格高昂，运行于高性能主机，如 80 年代，Oracle 或 IBM 的高性能大型主机售价约几万美金一台，普通人用不起，也无法了解其源码，难以研究发展。为方便教学研究，荷兰教授安德鲁·塔能鲍姆（Andrew S. Tanenbaum），也是著名书籍《计算机网络》的作者，决定写一个不含 Unix 版权源码的操作系统，借鉴 Unix 思想，类似 Unix，命名为 Minix，即迷你版 Unix。安德鲁·塔能鲍姆教授开发 Minix 后，开放全部源码，这对广大程序员是福音，各学校尤其是大学可用其进行教学研究。不仅教师教授受益，学生也得好处，如当时对 Unix 感兴趣的大学生李纳斯，因 Unix 是商业软件无法接触，Minix 开源后为其打开通向操作系统内核的大门。1991 年，李纳斯使用 Minix 后发现诸多缺陷，如性能不佳、内核不好用，且当时学校上网需登录 Unix 服务器，需用终端仿真器，Unix 系统提供但 Minix 未提供，教授认为此非研究操作系统内核核心要求而删减，李纳斯使用不便，决定自己搞定。从硬件层面设计终端仿真器，完成后发现 Minix 多处不好用，遂决定修改，文件系统、磁盘驱动等都重写，逐渐形成新操作系统内核雏形。1991 年 6 月，李纳斯搜集 Unix 系统标准资料，确定开发类似 Unix 且功能更强、性能稳定的系统。两个月后的 9 月，李纳斯完成整个操作系统，命名为 Linux，上传至 FTP 服务器，即 Linux 内核 0.01 版本，这只小企鹅诞生。</p></li><li><p>在 Linux 创建过程中，李纳斯未用任何工具，当时也无提升生产效率的工具，写出的约 1 万行代码全是 C 代码手敲，纯手工打造。由此可见，工具提高生产力，而真正的编程内功与工具关系不大。</p></li><li><p>说到工具，不得不提李纳斯大神的另一杰作——大名鼎鼎的 Git。相信大家都听说过，Git 主要用于代码版本管理。李纳斯开发此工具，是因他独自开发出 Linux 内核 0.01 版本并开源，后越来越多人加入开发完善，形成开发团队。人多后不能随意提交代码，需统一代码管理工具。早期代码版本管理工具中，经典的有 SVN，这是集中式代码版本管理工具，即多人同时改代码，以一个标准服务器为准，谁先提交服务器，服务器代码更改就以此为准，他人修改需先从服务器下载代码再改，保证不乱。此方式好理解，但有问题，因有服务器，会出现单点故障，服务器故障则代码无法同步。为解决此问题，出现分布式代码管理工具。李纳斯团队起初用收费的 BitKeeper 分布式代码管理工具，虽对其团队免费授权，但不保险。2005 年，BitKeeper 团队表示 Linux 发展好应收费，不再免费。李纳斯不能忍，一怒之下用几周时间开发出分布式代码版本管理工具 Git。Git 开发完善后技术成熟，好用，越来越多公司将代码版本管理工具从 SVN 迁移到 Git。如今，Git 基本是版本管理标配。更著名的是 2008 年上线的 GitHub 网站，这是全球最大的源代码集散地，几乎所有优秀代码都集中于此。有人开玩笑说，程序员可以不会写代码，但必须会用 GitHub，只要会用，上面能找到所有想实现的代码。</p></li><li><p>李纳斯大神的两个杰作，Linux 和 Git，为广大程序员带来无数福音，其起源或许偶然，大神一动念，就做出改变世界的东西。以上是 Linux 和 Unix 的渊源及发展的所有故事，可作了解。</p></li></ul><h2 id="五、linux-与-gnu-的关系" tabindex="-1"><a class="header-anchor" href="#五、linux-与-gnu-的关系" aria-hidden="true">#</a> 五、Linux 与 GNU 的关系</h2><ul><li><p>关于 Linux 诞生的过程和它的渊源，我们已经有所了解。接下来，要进一步做些扩展。在一些文章或资料中，常能看到一种奇怪的写法，即在 Linux 前面加了一个斜杠和“GNU”，即“GNU/Linux”。这是什么意思？它与平常所说的单独的 Linux 有何关系？下面来探讨这部分内容。</p></li><li><p>这涉及到软件发展过程中一场著名的运动——开源运动，即开源软件运动。我们知道，Linux 本身是开源免费软件，李纳斯在发布 0.01 版本时就直接开源、公开了。当时，李纳斯之所以有这样的想法，是受到一个人的感召和影响，此人便是理查德斯托曼（Richard Stallman），他被称为“自由软件之父”。看他的长头发和大胡子，就给人一种很自由的感觉。这个人非常厉害，是职业黑客，有人称他为“世界第一黑客”。他当时在 MIT 的 AI 实验室工作。</p></li><li><p>进入 20 世纪 80 年代后，软件发展出现一个趋势，即越来越多的软件开始注册软件专利，通过发布商业许可、版权限制等方法设置使用壁垒，以此赚钱牟利。对此，理查德斯托曼非常气愤，作为职业黑客和运动倡导者，他发起了“自由软件运动”。</p></li><li><p>他的自由软件运动理念是，软件不应收费，不应完全封装起来不让别人看到源码。在他看来，若想让别人用所写的软件，就应公开源码，让别人知道软件的功能，否则无法确定软件包中是否有木马。基于此想法，与自由软件相对的专利软件，就像是一种欺骗消费者的行为，就如同购买食品，外包装应写明配料表和能量等信息。所以，软件也应公开透明，专利软件是不道德的。</p></li><li><p>或许有人会问，若如此，软件公司靠什么赚钱盈利？理查德斯托曼认为，公司应依靠提供服务和培训盈利。1985 年，他发表了著名的《GNU 宣言》，表示要开启一项伟大的计划——GNU 计划。其目标是创建一套完全自由、免费且兼容 Unix 但又不同于 Unix 的系统。他将此称为“GNU”，“GNU”本身是一个递归定义，全称是“GNU is not Unix”。这意味着要构建一个庞大的操作系统，包含各种可直接安装在电脑上使用的软件，是自由免费且兼容 Unix 但又非 Unix 的。这便是 GNU 计划的宏伟构想。</p></li><li><p>1989 年，他与一群律师起草了一个著名的协议，称为“GNU 通用公共协议证书”，即“GNU General Public License”，简称为“GPL”。这相当于自由软件发布的协议规范。所以，我们在提到 Linux 时，有时在一些文章中会看到“GPL 如何如何”的说法，即是否符合 GPL 协议。</p></li><li><p>GPL 的规范是，只要遵循该协议，就表示源码完全公开，所有人可自由阅读、更改，并可进一步打包发布。但有个要求，若使用了符合 GPL（即符合 GNU 项目）的下属软件，打包发布后也必须遵循 GPL 协议规范，即新开发的代码也必须开源自由。这是 GPL 规范的要求。</p></li><li><p>与前面提到的另一个规范“BSD”有所不同。BSD（伯克利）规范整体也是免费自由的，允许在注明版权和许可协议信息的前提下，随意使用、更改并发布，且不像 GPL 要求更改后的代码也要开源，可以闭源并放入商业化产品中。所以，FreeBSD 对于商业化公司更改代码更为友好，这也是苹果公司基于 BSD 进行操作系统设计的原因。相对而言，GPL 限制了公司或程序开发者的一些自由，最终保证的是最终用户的自由，即使用软件的人永远能看到所有源代码。因此，有人认为自由软件运动在理念上存在分歧，GPL 规范强调的是最终用户的自由，而 BSD 规范保证的是软件开发者或公司的自由，这是两种不同的协议规范。</p></li><li><p>理查德斯托曼创建 GNU 计划并起草 GPL 协议后，很多人参与进来，为这个项目添砖加瓦，众多软件加入，很多东西都能使用。到 1989 年，除了最关键、核心的操作系统内核外，其他绝大多数软件都已完成。当时，GNU 计划的核心叫“GNU/ Hurd”。除了操作系统内核这一最难搞定的部分缺失，其他部分都已完成，万事俱备，只欠东风。</p></li><li><p>而在 1991 年，李纳斯刚好完成了 Linux 的开发，并在理查德斯托曼的精神感召下，直接将项目开源。于是，把类似于 Unix 的 Linux 操作系统内核直接加入到自由软件 GNU 计划中，至此，GNU 计划完备，所有东西都有了，可安装在电脑上运行，不仅有底层操作系统内核，还有外层丰富的软件，如同安装 Windows 后可直接使用电脑。</p></li><li><p>在此，要区分几个概念：什么是 Linux 系统、什么是 Linux 内核、什么是 GNU/Linux。对于老外，一般会连读这个缩写，很多老外读作“GNU/Linux”。它们有何区别？现在来总结一下。</p></li><li><p>在计算机最底层是计算机硬件，操作电脑最终要转化为指令操作硬件。能直接操作硬件的是操作系统，其外要有硬件接口层，即操作系统的核心层，通常称为“Kernel”。李纳斯 1991 年发布的版本就是 Linux 的核心层，即 Linux 内核，这是李纳斯的工作。实际使用操作系统时，其上层应有众多应用程序，如在 Windows 上打开 Word，或使用 FTP 服务、HTTP 服务、浏览器等。这些应用软件要与底层操作系统内核交流通信，告知内核当前要做何事。所以，在 Kernel 层外，应有一个媒介、一个接口，这个媒介叫“Shell”，它是命令解释层，有“外壳”之意，连接外部应用程序和内层操作系统内核。最外层是外围应用层，所有应用，包括文本编辑器、浏览器、数据库管理系统（DBMS）以及图形化桌面，都在这一层，用户可在此层直观操作电脑。</p></li><li><p>Unix 有商业化发行版本，Linux 也有各种发行版。可基于同一内核（某个版本的 Linux Kernel），在外围添加不同的 Shell 和各种外围应用程序，构建出不同的 Linux 整体操作系统，这样的操作系统统称“GNU/Linux”。一般提到完整、具体、可直接上手使用的 Linux 系统，其实指的是“GNU/Linux”，通常使用的是其发行版本。</p></li><li><p>在此可以看到，Linux Kernel 内核是整个操作系统的核心部分，主要工作包括内存管理、进程管理、设备驱动程序、文件系统、网络管理等。而其他如应用软件界面接口、外围附加驱动等，则是外围应用层要做的事，它们在不同的发行版中可能有所不同。</p></li><li><p>回过头看，Linux 的图标是一只企鹅。当时说它不太精神、慵懒、懒散。用李纳斯的话说，这是一只像刚喝了一大扎鲜啤酒、醉眼朦胧的企鹅，状态是微醺、爽翻了。所以，现在或许能理解一点，因为 Linux 本就是 GNU 计划的一员，且是核心，是自由软件，开源免费，或许李纳斯选择这个企鹅图标，要的就是这种自由散漫、无拘无束、非常爽的感觉。</p></li></ul><h2 id="六、linux-发行版" tabindex="-1"><a class="header-anchor" href="#六、linux-发行版" aria-hidden="true">#</a> 六、Linux 发行版</h2><ul><li><p>了解了 GNU/Linux 这一概念后，便可知我们平常所说的 Linux 操作系统，比如要给自己的电脑装上一个 Linux 系统，装的是狭义的 Linux（即 Linux Kernel），还是广义的 GNU/Linux 呢？显然，我们要装的是 GNU/Linux。不光要装上 Kernel 核心，还要有外面的命令解释层（Shell）和外围应用层，所有应用装好后，才是真正可用的系统。</p></li><li><p>会发现针对同样的 Linux Kernel 核心，可以在此基础上包装不同的外围应用，且外围应用可能有侧重。比如，若希望从 Windows 迁移过来有更好的用户体验，可能会把桌面系统做得更漂亮；若强调性能更加强悍，可能对桌面的要求就不特别高，可能更关注系统的稳定性和性能。所以，外围可以有各种不同版本和不同的实现，这就是所说的 GNU/Linux，或者说是具体的 Linux 不同的发行版本。</p></li><li><p>接下来介绍主流的、市面上常见的一些 Linux 发行版。从性质上划分，Linux 的发行版整体可分为两大类：一类是由商业公司维护的商业版本，需收费；另一类是由开源社区维护的免费版本。</p></li><li><p>首先看最有名的 Linux 发行版，即大名鼎鼎的 Red Hat（红帽）。Red Hat 其实是一系列软件，主要特点是不太关注桌面外观，可能不够华丽、漂亮，但性能强悍、稳定，很多高手喜欢用红帽系列的 Linux，在实际项目应用中，企业作为服务器的系统首选也可能是红帽系列。</p></li><li><p>红帽是一系列操作系统，主要细分有以下三个：一个是红帽的企业版本（收费版）Red Hat Enterprise Linux，有时会简写成 RHEL。同样，对应的有社区免费版本，这两个都大名鼎鼎，一个叫 Fedora，另一个叫 CentOS。</p></li><li><p>Fedora 可看作是红帽系列里的一个实验版本，迭代较快、较激进，可能功能很新，但整体可能不够稳定。若其新特性被评估为稳定后，可能会添加到对应的 RHEL（企业版）里。而 CentOS 与 Fedora 不同，CentOS 是基于已发布的企业版本，除去商标等信息和有版权的代码后重构的免费版本。可以说 CentOS 与企业版本的稳定性一样，功能齐全且免费。正因为有这样好的版本，在实际应用中，很多企业将 CentOS 作为服务器操作系统的首选。这也是本课程后面进行 Linux 系统安装介绍讲解时，选用 CentOS 为例的原因。当然，CentOS 也有缺点，相对来说可能会滞后，要等企业版本完全发布后再重构，才能得到对应 Linux 内核的新版本。</p></li><li><p>这是红帽系列的发行版。另外还有一个非常有名的系列，即所谓的 Debian 系列。Debian 的发音，中文翻译有时是“得变”，有时是“迭变”，这是个合成词，所以有点奇怪。它是社区类 Linux 的典范，到目前为止，Debian 是最遵循 GNU 规范的 Linux 系统，很多公司开发自己的 Linux 系统时，都是基于 Debian 进行开发的。基于它发展出一个非常有名的发行版，叫 Ubuntu（乌班图），很多同学可能听说过，它就是基于 Debian 发展出来的。</p></li><li><p>它们之间的关系是：Debian 里本身有三个版本分支，即稳定版本（stable 版本）、不稳定版本（unstable 版本）和测试版本（testing 版本），有点类似于红帽系列的划分。而 Ubuntu 是基于 Debian 里的 unstable（不稳定）版本做了一些开发、改进和优化后发布的相应发行版。所以它的特点是首先有最新的软件包，非常激进，整体更前沿，但也会有相对较多的 bug。更多人使用 Ubuntu 的一个原因是它针对 Debian 系统里的桌面做了专门优化，有非常漂亮的桌面，整个桌面好看又好用。如果从 Windows 切换过来，用 Ubuntu 上手是个很好的选择。当然，如果在服务器上部署，可能因为 Ubuntu 没有 Debian 那么稳定，所以在选择时可能需要权衡。如果是自己学习、做测试，Ubuntu 是不错的选择。而且 Ubuntu 不光外观漂亮，还是免费的，是基于 Debian 坚守自由软件初衷的一个发行版。</p></li><li><p>另外，基于 Ubuntu 还有一个可能稍小众的版本叫 Mint，这个版本是基于 Ubuntu 又做了一些变化的版本，在外观上与 Ubuntu 有很大差异。它们的构件基本一样，但外观上，Mint 更像 Windows 的早期版本，如 Windows XP 或 Windows Vista，而 Ubuntu 看起来会更像苹果的 Mac OS 系统页面。所以选择时就看自己的使用习惯。</p></li></ul><ul><li>除了红帽系列和 Debian 系列，这两个是最主流的系列。另外还有一个是 SUSE，SUSE 是德国公司开发的一个 Linux 发行版，在欧洲非常流行，号称是世界上最华丽的操作系统，因为它的桌面环境主要用的是 KDE（可能不够稳定，但漂亮、华丽），这成为了 SUSE 的一个关键标签。</li></ul><ul><li><p>SUSE 本身是一个企业版本，有时会简写成 SLES（SUSE Enterprise Linux）。那它有没有社区版呢？当然也有，基于 SUSE 有一个 openSUSE，是它的社区开源免费版本，它们的关系类似于红帽里的 RHEL 和 CentOS ，即基于稳定的 SUSE 企业版开放出来的 open 版本。所以，如果因为它的界面华丽，小白新用户想选择也是比较容易上手的，但在国内使用相对较少、较小众。</p></li><li><p>还可以多介绍几个。有一个版本叫 Gentoo，Gentoo 性能非常强悍，据说在相同硬件环境下是运行最快的 Linux 发行版，但问题在于它的安装是所有发行版本里最复杂的，目前采用的方式是直接编译、编译源码包然后编译安装操作系统，这个过程对新手小白不太友好，熟悉之后可以尝试感受一下。</p></li><li><p>另外还有一个版本叫 Arch Linux，Arch 的定位是轻量灵活，突出性能，比较好用，但对新手上手不太友好、不灵活，而且它还有一个很大的特点是滚动更新，不像 CentOS 或 Ubuntu 有固定的隔几个月出一个发行版，它经常是隔几个月或几年都没有发行版，只要不停更新系统，自动追踪当前最新版本就可以。当然，更新后也会更新底层的 Linux 内核对应的版本。另外，因为 Arch Linux 使用不太方便，基于它又开发出了一个叫 Manjaro 的 Linux 发行版，可以看作是更易于安装、更稳定、对新手更友好的 Arch 版本。</p></li><li><p>这就是常见的一些 Linux 发行版。在国内，平常使用较多的版本是 CentOS 和 Ubuntu，这两个是目前国内使用 Linux 发行版中占比最多的，而且当前的社区、讨论问题、源码包等资源也是这两个发行版最多。所以，当前介绍讲解时选用 CentOS，因为在实际企业应用中，它性能更稳定、更强悍。Ubuntu 可能在个人测试、个人桌面方面更漂亮。</p></li><li><p>当然，如果关注当前技术新进展，会知道国内也有一些自己的 Linux 发行版，早期有红旗、蓝点，后来有 UOS，现在有很火的深度（Deepin），它本身也是基于 Debian 系列进一步开发的。目前，很多国产的 Linux 系统在政府、企业等各行各业已经得到了广泛应用。所以，选择并非那么局限，有很多新兴系统都可以尝试，只要了解底层原理，什么系统都能上手使用。</p></li><li><p>另外多说一句，我们非常熟悉的一个操作系统，不是用在电脑上，而是用在手机、移动设备（如手机、平板）上，即 Android（安卓）。安卓系统也是构建在 Linux 内核之上，不过，因为谷歌要支持应用开发，还加了 GBM，所以安卓不属于 GNU/Linux，不属于 Linux 发行版，但底层内核是 Linux。</p></li><li><p>还有当前比较新潮的华为开发的鸿蒙系统，也是基于 Linux 内核进行开发的。</p></li><li><p>这就是关于 Linux 不同发行版的整体介绍。当然，关于每个发行版本名称的读音，可能有各种不同版本，像 CentOS，很多人可能读成“Centos”，因为很明显“OS”是操作系统（Operating System）的简称，这只是发音习惯，读什么不重要，只要知道说的是这个操作系统就行。</p></li></ul><h2 id="七、linux-与-windows-的对比" tabindex="-1"><a class="header-anchor" href="#七、linux-与-windows-的对比" aria-hidden="true">#</a> 七、Linux 与 Windows 的对比</h2><ul><li><p>接下来，针对 Linux 和 Windows 的不同进行专门对比，以便更加理解 Linux 的特点，以及它们各自适用的应用场景。直接通过表格列举其特点并进行对照，会更加清晰明了。</p></li><li><p>首先，最为关心的当属费用方面。这可能是最为直观的区别。Windows 本身是收费软件，且费用不低。或许有同学说，使用 Windows 多年似乎未交过钱。一方面，可能使用的是破解版，这是不正确且不提倡的。另一方面，更大可能是购买笔记本时，笔记本已预装正版 Windows，费用已涵盖在笔记本费用中。而对于 Linux，因其是 GNU 计划的核心部分，属于自由软件，通常是免费的，或少许收费。少许收费意味着企业版并非使用就收费，能看到源码并可直接使用，关键可能是后续某些服务需要付费。</p></li><li><p>接下来是软件和支持。免费和收费一比，可能会觉得免费的好。但其实未必，Windows 在软件和支持的数量及质量上有优势，不过大部分是收费软件，如 Office，若购买电脑时已预装，则费用已包含。这些软件通常由微软官方提供支持和服务。而 Linux 作为开源自由软件，可随时随意修改、定制和发布。因其免费，缺乏资金支持，部分软件质量欠佳，用户体验考虑不周。其提供者主要是全球的 Linux 开发者和自由软件社区。当然，如今 Linux 在这方面正迎头赶上，软件和支持日益丰富。与 Windows 的最大差距在于，基于系统的常用软件，如文本编辑、上网等没问题，但涉及专业操作或特定行业的软件，如 PS、游戏等，对 Linux 的支持不够好，多基于 Windows 开发。</p></li><li><p>然后是安全性。这一点显然 Linux 完胜。Windows 作为商业软件，对用户而言更像黑盒子，用户不知内部情况，仅通过鼠标点击、键盘操作获取系统反馈。若出现蓝屏、报错等系统 bug，只能由微软团队解决，所以需频繁打补丁、安装系统更新，若不及时，易中病毒、有木马，这是困扰 Windows 用户的大问题。而 Linux 因开源透明，并非黑盒子，能看到内部情况，所有漏洞能第一时间暴露并解决，更新即可，所以非常安全。</p></li><li><p>再是使用习惯。这是 Windows 的优势。Linux 因免费开源，在用户界面美化和用户体验优化上可能做得不够好，对程序员友好，源码完全开放。Windows 对程序员不太友好，但对普通用户上手更简单，因为是视窗系统，纯图形界面，鼠标、键盘组合操作，用户上手容易。Linux 早期版本无图形化界面，完全命令行操作，现虽有图形化界面且支持键盘完成一切操作，但上手门槛较高，需学习和指导。不过也要看到发展趋势，很多 Linux 发行版提供漂亮的图形化用户界面，整体风格类似 Mac OS，非常好用，具体取决于使用习惯。</p></li><li><p>接着是可定制性。Windows 不存在可定制性，无法想象定制个性化版本的 Windows，其是封闭的，可定制性差。而 Linux 开源，可随意修改，且内部模块化程度高，内核设计精巧。其模块化机制能根据用户需求灵活嵌入或移除某些模块，可进行内核裁剪和定制化设计，非常适用于嵌入式系统。要知道，嵌入式系统有些功能不需要，可砍掉，仅保留内核最重要的部分。Linux 内核最小能小到几百 KB，而复杂的有图形化界面的系统，如 Windows 或其他 Linux 系统，安装至少好几 G，甚至几十 G。所以对于很多底层应用，Linux 非常方便。</p></li><li><p>最后总结，主要区别在于：Linux 继承了 Unix 的特点，主要标志是短小精悍，性能强劲，稳定性、安全性好，开源免费。而 Windows 方向是面向用户友好，作为商业软件，为用户提供更多服务，目标是构建日常易上手，工作、生活、学习、娱乐中涵盖各种场景的万能工具。由此可见，它们各有适用场景。Windows 适合个人电脑桌面操作系统，而 Linux 更适用于服务器操作系统。如今几乎所有企业的后台服务器运行的操作系统都是 Linux，主要是因为 Linux 内核小，运行占用系统资源少，无需花费更多资源维护视窗界面。目前个人电脑硬件性能强大，使用 Linux 可搭建为上百人提供服务的服务器。熟知的互联网大厂应用，如淘宝、抖音、微信、百度等日活过亿的应用，能承受众多用户同时使用，支撑它们的是后台成千上万的 Linux 服务器主机构建的机器。</p></li></ul>',26);function _(G,B){const l=a("router-link");return t(),L("div",null,[U,h,p(" more "),c,i("nav",S,[i("ul",null,[i("li",null,[u(l,{to:"#概述框架"},{default:e(()=>[n("概述框架")]),_:1})]),i("li",null,[u(l,{to:"#a-第1章linux入门-1"},{default:e(()=>[n("A-第1章Linux入门")]),_:1})]),i("li",null,[u(l,{to:"#一、整体介绍"},{default:e(()=>[n("一、整体介绍")]),_:1}),i("ul",null,[i("li",null,[u(l,{to:"#_1、课程引入"},{default:e(()=>[n("1、课程引入")]),_:1})]),i("li",null,[u(l,{to:"#_2、就业方向"},{default:e(()=>[n("2、就业方向")]),_:1})]),i("li",null,[u(l,{to:"#_3、课程内容安排"},{default:e(()=>[n("3、课程内容安排")]),_:1})]),i("li",null,[u(l,{to:"#_4、课程特色"},{default:e(()=>[n("4、课程特色")]),_:1})])])]),i("li",null,[u(l,{to:"#二、linux-入门篇"},{default:e(()=>[n("二、Linux 入门篇")]),_:1})]),i("li",null,[u(l,{to:"#三、linux-和-unix-的渊源"},{default:e(()=>[n("三、Linux 和 Unix 的渊源")]),_:1})]),i("li",null,[u(l,{to:"#四、unix-及其相关系统"},{default:e(()=>[n("四、Unix 及其相关系统")]),_:1})]),i("li",null,[u(l,{to:"#五、linux-与-gnu-的关系"},{default:e(()=>[n("五、Linux 与 GNU 的关系")]),_:1})]),i("li",null,[u(l,{to:"#六、linux-发行版"},{default:e(()=>[n("六、Linux 发行版")]),_:1})]),i("li",null,[u(l,{to:"#七、linux-与-windows-的对比"},{default:e(()=>[n("七、Linux 与 Windows 的对比")]),_:1})])])]),b])}const D=x(o,[["render",_],["__file","A-第1章Linux入门.html.vue"]]);export{D as default};
