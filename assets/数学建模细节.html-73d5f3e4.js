import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as c,c as l,d as u,a as n,b as s,e as p,f as t}from"./app-2a2d189a.js";const i={},k=n("h1",{id:"数学建模细节",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数学建模细节","aria-hidden":"true"},"#"),s(" 数学建模细节")],-1),r=n("p",null,"数学建模细节",-1),m=t(`<h2 id="一、" tabindex="-1"><a class="header-anchor" href="#一、" aria-hidden="true">#</a> 一、</h2><h2 id="一、拟合线性回归-这有的是为了分析数据" tabindex="-1"><a class="header-anchor" href="#一、拟合线性回归-这有的是为了分析数据" aria-hidden="true">#</a> 一、拟合线性回归：这有的是为了分析数据</h2><p>有的利用 回归 进行 分析 数据 ， 有的利用 回归 进行 预测 判断 这个 模型 好不好</p><h3 id="例子一" tabindex="-1"><a class="header-anchor" href="#例子一" aria-hidden="true">#</a> 例子一：</h3><p>建立定价的函数表达式，用最小二乘法计算各变量的系数，从而得到任务定价规律(见式(8))。根据已完成任务数据重新计算系数，将未完成任务数据代入新的定价公式中、、</p><p><strong>建立的线性回归 但是 自变量的值 也是 几个指标 也是 自己建立的 通过数据处理自己定义 自变量</strong></p><p><strong>过程：</strong></p><p>问题一中，我们首先猜测了可能影响任务定价的因素，包括：任务周围的用 户限额总量、任务周围的用户密度、任务的离群程度等。我们量化以上可能的影 响因素，并以该因素为自变量以定价为因变量回归分析，通过拟合度来判断该因 素是否对定价有决定作用。我们随机抽取 70%的数据进行回归训练，结果表明， 任务的定价与周围用户的限额总量、周围用户的平均距离、自身的离群程度关系 密切。利用剩余的 30%数据分别对以上回归方程进行检验，用均方残差偏移程度 来评价方程的可靠性。根据三个因素，对于成功执行的任务与未成功执行的任务 分别进行回归分析，并对比其回归函数图像，发现任务未完成的主要原因是用户 没考虑自身限额对定价的影响，其余两个因素相对次要。</p><h2 id="二、多项式拟合" tabindex="-1"><a class="header-anchor" href="#二、多项式拟合" aria-hidden="true">#</a> 二、多项式拟合：</h2><p>首先给出数据点集合， 然后 根据 数据点 集合 进行 多项式函数的拟合。以最小二乘 为指标 确定多项式的 各个系数，得到拟合函数。</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>P<span class="token operator">=</span><span class="token function">polyfit</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">% 横坐标，纵坐标， N 表示 多项式最高次幂。  即 几次多项式，</span>
<span class="token function">polyval</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>xi<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">% 这个是计算值的，  根据 系数P ， 然后得到函数， 然后在 xi的 取值。</span>

<span class="token comment">%例子:编写函数拟合</span>
x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">9</span> <span class="token number">7</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">7</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
P<span class="token operator">=</span><span class="token function">polyfit</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xi<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0.2</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">;</span>
yi<span class="token operator">=</span><span class="token function">polyval</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>xi<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>xi<span class="token punctuation">,</span>yi<span class="token punctuation">,</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;r*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">%例子：使用工具进行拟合</span>
x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">9</span> <span class="token number">7</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">7</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;r*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">%先把这九个数据点 画出来。然后 进行 点击 工具--&gt;基本拟合---&gt;选择几阶多项式</span>


<span class="token comment">%例子：指定函数拟合：求未知数，a，b，k等参数求以及一些 指标求 </span>
x<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token number">1.2</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token number">2.8</span><span class="token punctuation">;</span><span class="token number">3.6</span><span class="token punctuation">;</span><span class="token number">4.4</span><span class="token punctuation">;</span><span class="token number">5.2</span><span class="token punctuation">;</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token number">7.2</span><span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token number">9.2</span><span class="token punctuation">;</span><span class="token number">10.4</span><span class="token punctuation">;</span><span class="token number">11.6</span><span class="token punctuation">;</span><span class="token number">12.4</span><span class="token punctuation">;</span><span class="token number">13.6</span><span class="token punctuation">;</span><span class="token number">14.4</span><span class="token punctuation">;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">0.85</span><span class="token punctuation">;</span><span class="token number">0.29</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.27</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.53</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.12</span><span class="token punctuation">;</span><span class="token number">0.17</span><span class="token punctuation">;</span><span class="token number">0.28</span><span class="token punctuation">;</span><span class="token number">0.15</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.03</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.15</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.071</span><span class="token punctuation">;</span><span class="token number">0.059</span><span class="token punctuation">;</span><span class="token number">0.08</span><span class="token punctuation">;</span><span class="token number">0.032</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.015</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;r*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%知道其对应的函数形式为f(t)=a*cos(kt)e&quot;&#39;,则可用MATLAB进行拟合。编写如下的M文件:</span>
syms t<span class="token punctuation">;</span>  <span class="token comment">%创建符号变量。</span>
x<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token number">1.2</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token number">2.8</span><span class="token punctuation">;</span><span class="token number">3.6</span><span class="token punctuation">;</span><span class="token number">4.4</span><span class="token punctuation">;</span><span class="token number">5.2</span><span class="token punctuation">;</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token number">7.2</span><span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token number">9.2</span><span class="token punctuation">;</span><span class="token number">10.4</span><span class="token punctuation">;</span><span class="token number">11.6</span><span class="token punctuation">;</span><span class="token number">12.4</span><span class="token punctuation">;</span><span class="token number">13.6</span><span class="token punctuation">;</span><span class="token number">14.4</span><span class="token punctuation">;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">0.85</span><span class="token punctuation">;</span><span class="token number">0.29</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.27</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.53</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.12</span><span class="token punctuation">;</span><span class="token number">0.17</span><span class="token punctuation">;</span><span class="token number">0.28</span><span class="token punctuation">;</span><span class="token number">0.15</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.03</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.15</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.071</span><span class="token punctuation">;</span><span class="token number">0.059</span><span class="token punctuation">;</span><span class="token number">0.08</span><span class="token punctuation">;</span><span class="token number">0.032</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.015</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">%函数fittype 是自定义的拟合函数，</span>
<span class="token comment">%cfun 是根据自定义的拟合函数f来拟合数据x，y</span>
f<span class="token operator">=</span><span class="token function">fittype</span><span class="token punctuation">(</span><span class="token string">&#39;a*cos(k*t)*exp(w*t)&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;independent&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;t&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;coefficients&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cfun<span class="token operator">=</span><span class="token function">fit</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token comment">% 相当于xgboost模型了  这个cfun</span>
xi<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">;</span>
yi<span class="token operator">=</span><span class="token function">cfun</span><span class="token punctuation">(</span>xi<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;r*&#39;</span><span class="token punctuation">,</span>xi<span class="token punctuation">,</span>yi<span class="token punctuation">,</span><span class="token string">&#39;b-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">%曲线拟合工具箱：</span>
<span class="token comment">%在命令窗口 输入 cftool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、非线性" tabindex="-1"><a class="header-anchor" href="#三、非线性" aria-hidden="true">#</a> 三、非线性：</h2><p>这里不是简单的多项式函数了， 而是 某种 模型 的 函数。建立回归曲线模型。然后对未来进行输入然后输出想要的目标结果。</p><p>模型有参数，主要是 进行参数的求解 。然后 建立模型。</p><h3 id="人口预测模型" tabindex="-1"><a class="header-anchor" href="#人口预测模型" aria-hidden="true">#</a> 人口预测模型：</h3><p>logistic曲线。有阻滞。因为人口不能无限制增长。</p><p>下面这个方法是全按照推导公式方程进行求解了。</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%读入数据：对于每年的数据</span>
Y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">33815</span> <span class="token number">33981</span> <span class="token number">34004</span> <span class="token number">34165</span> <span class="token number">34212</span> <span class="token number">34327</span> <span class="token number">34344</span> <span class="token number">34458</span> <span class="token number">34498</span> <span class="token number">34476</span> <span class="token number">34483</span> <span class="token number">34488</span> <span class="token number">34513</span> <span class="token number">34497</span> <span class="token number">34511</span> <span class="token number">34520</span> <span class="token number">34507</span> <span class="token number">34509</span> <span class="token number">34521</span> <span class="token number">34513</span> <span class="token number">34515</span> <span class="token number">34517</span> <span class="token number">34519</span> <span class="token number">34519</span> <span class="token number">34521</span> <span class="token number">34521</span> <span class="token number">34523</span> <span class="token number">34525</span> <span class="token number">34525</span> <span class="token number">34527</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
T<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span>  <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span> <span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">%线性化处理</span>
<span class="token keyword">for</span> t <span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">30</span>
    <span class="token function">x</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">y</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span><span class="token function">Y</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
c<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
X<span class="token operator">=</span><span class="token punctuation">[</span>c<span class="token punctuation">,</span>x<span class="token operator">&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
B<span class="token operator">=</span><span class="token function">inv</span><span class="token punctuation">(</span>X<span class="token operator">&#39;</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token operator">*</span>X<span class="token operator">&#39;</span><span class="token operator">*</span>y<span class="token operator">&#39;</span>

<span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">30</span>
   <span class="token function">Y1</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">B</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">end</span>
<span class="token function">plot</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span>Y1<span class="token punctuation">,</span>T<span class="token punctuation">,</span>Y<span class="token punctuation">,</span><span class="token string">&#39;r*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),d={href:"https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>非线性曲线拟合是已知输入向量xdata和输出向量ydata，并且知道输入与输出的函数关系为ydata=F(x, xdata)，但不知道系数向量x。今进行曲线拟合，求x使得输出的如下最小二乘表达式成立：
min Σ(F(x,xdatai)-ydatai)^2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%main代码如下</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1790</span> <span class="token number">1800</span> <span class="token number">1810</span> <span class="token number">1820</span> <span class="token number">1830</span> <span class="token number">1840</span> <span class="token number">1850</span> <span class="token number">1860</span> <span class="token number">1870</span> <span class="token number">1880</span> <span class="token number">1890</span> <span class="token number">1900</span> <span class="token number">1910</span> <span class="token number">1920</span> <span class="token number">1930</span> <span class="token number">1940</span> <span class="token number">1950</span> <span class="token number">1960</span> <span class="token number">1970</span> <span class="token number">1980</span> <span class="token number">1990</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
p <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3.9</span> <span class="token number">5.3</span> <span class="token number">7.2</span> <span class="token number">9.6</span> <span class="token number">12.9</span> <span class="token number">17.1</span> <span class="token number">23.2</span> <span class="token number">31.4</span> <span class="token number">38.6</span> <span class="token number">50.2</span> <span class="token number">62.9</span> <span class="token number">76.0</span> <span class="token number">92.0</span> <span class="token number">106.5</span> <span class="token number">123.2</span> <span class="token number">131.7</span> <span class="token number">150.7</span> <span class="token number">179.3</span> <span class="token number">204.0</span> <span class="token number">226.5</span> <span class="token number">251.4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> t<span class="token operator">-</span><span class="token number">1780</span><span class="token punctuation">;</span> <span class="token comment">%整体减去1780</span>
x0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%待定参数x的初值（自己根据实际情况给出初值，之后再不断调整；其中第一个参数为最大人口数，第二个参数为人口增长率）</span>
x <span class="token operator">=</span> <span class="token function">lsqcurvefit</span><span class="token punctuation">(</span><span class="token string">&#39;population&#39;</span><span class="token punctuation">,</span>x0<span class="token punctuation">,</span>t<span class="token punctuation">,</span>p<span class="token punctuation">)</span> <span class="token comment">%使用函数求得最终的（xm，r）</span>
p1 <span class="token operator">=</span> <span class="token function">population</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token operator">+</span><span class="token number">1780</span><span class="token punctuation">,</span>p<span class="token punctuation">,</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span>t<span class="token operator">+</span><span class="token number">1780</span><span class="token punctuation">,</span>p1<span class="token punctuation">,</span><span class="token string">&#39;-r*&#39;</span><span class="token punctuation">)</span>
<span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&#39;Logistic模型拟合图&#39;</span><span class="token punctuation">)</span>
<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">&#39;年&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">&#39;人口数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">&#39;实际数据&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;理论数据&#39;</span><span class="token punctuation">)</span>

<span class="token comment">%population.m函数如下：</span>

<span class="token keyword">function</span> f <span class="token operator">=</span> <span class="token function">population</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>t<span class="token punctuation">)</span>
<span class="token comment">%UNTITLED2 此处显示有关此函数的摘要</span>
<span class="token comment">%   此处显示详细说明</span>
f <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3.9</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%这里的公式代入的是3.9，也就是初始数据，根据自己的初值进行修改</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="浓度渗透模型" tabindex="-1"><a class="header-anchor" href="#浓度渗透模型" aria-hidden="true">#</a> 浓度渗透模型：</h3><p>随着浓度 进行 转移 。</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%main函数代码如下：</span>
tdata<span class="token operator">=</span><span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cdata<span class="token operator">=</span><span class="token number">1e-05</span><span class="token operator">.*</span><span class="token punctuation">[</span><span class="token number">454</span> <span class="token number">499</span> <span class="token number">535</span> <span class="token number">565</span> <span class="token number">590</span> <span class="token number">610</span> <span class="token number">626</span> <span class="token number">639</span> <span class="token number">650</span> <span class="token number">659</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
x0<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.05</span><span class="token punctuation">,</span><span class="token number">0.05</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
x<span class="token operator">=</span><span class="token function">lsqcurvefit</span><span class="token punctuation">(</span><span class="token string">&#39;curvefun&#39;</span><span class="token punctuation">,</span>x0<span class="token punctuation">,</span>tdata<span class="token punctuation">,</span>cdata<span class="token punctuation">)</span>
f<span class="token operator">=</span><span class="token function">curvefun</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>tdata<span class="token punctuation">)</span>
<span class="token function">plot</span><span class="token punctuation">(</span>tdata<span class="token punctuation">,</span>cdata<span class="token punctuation">,</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span>tdata<span class="token punctuation">,</span>f<span class="token punctuation">,</span><span class="token string">&#39;r-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">%curvefun.m 文件函数代码如下：</span>
<span class="token keyword">function</span> f <span class="token operator">=</span> <span class="token function">curvefun</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>tdata<span class="token punctuation">)</span>
f<span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span>tdata<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">% 其中 x(1)表示a  x(2)表示b ，x(3)=k</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、logistic回归" tabindex="-1"><a class="header-anchor" href="#四、logistic回归" aria-hidden="true">#</a> 四、Logistic回归</h2><p>要注意拟合这个 问题，</p><p>logistic 回归又叫<strong>对数几率回归</strong>，适合数值型的二值型输出的拟合，它其实是一个<strong>分类模型</strong>，比如根据患者的医疗数据判断它是否能被治愈。</p><p>Logistic回归是一种十分常见的分类模型，是的严格来说这是一个分类模型，之所以叫做回归也是由于历史原因。不同于线性回归中对于<strong>参数的推导</strong>，我们在这里运用的方式不再是最小二乘法，<strong>而是极大似然估计。</strong></p><p>Logistic回归分析属于非线性回归，它是研究<strong>因变量为二项分类或多项分类结果与某些影响因素之间关系的一种多重回归分析方法。</strong></p><h2 id="五、分类器模型-逻辑回归、" tabindex="-1"><a class="header-anchor" href="#五、分类器模型-逻辑回归、" aria-hidden="true">#</a> 五、分类器模型：逻辑回归、</h2><p>回归可能就是 一个曲线 把各个点得区域 划分为几个不同得区域 然后 就是 回归了。</p><p>根据因变量为二分类或多分类，logistic回归可相应的分为二分类logistic回归和多分类 logistic回归。</p><h2 id="六、预测数值模型" tabindex="-1"><a class="header-anchor" href="#六、预测数值模型" aria-hidden="true">#</a> 六、预测数值模型：</h2><p>有个几个自变量，有一个因变量数值。然后 通过已有的n个点 进行 拟合得到变异系数，（这次不是 最小二乘，而是最大似然估计） 然后得到 一个曲线函数，但是这个曲线函数并不一定会 通过 所有的曲线，所以 进行数值的预测 。或者进行投映0~1</p><h1 id="no-3-数学-优化-规划" tabindex="-1"><a class="header-anchor" href="#no-3-数学-优化-规划" aria-hidden="true">#</a> No.3 &gt;数学-&gt;优化-&gt;规划：</h1><h2 id="非线性规划" tabindex="-1"><a class="header-anchor" href="#非线性规划" aria-hidden="true">#</a> 非线性规划：</h2><p>对于非线性规划 目前 还没有 一般解法；；包含非线性函数。</p><p>简单函数形式：fmincon(fun,x0,A,B,Aeq,Beq,LB,UB,nonlcon,options)///类似于 线性的 linprog函数。不过这个的参数比较多。</p><p>只要是 包含非线性的 都要进行编写 fun.m 文件</p><p>固定的类型解决非线性的过程：</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>matlab的命令：
x的返回值是决策向量x的取值，
fval返回的是目标函数的取值，
其中fun是用M文件定义的函数﹔<span class="token punctuation">;</span>
x0是x的初始值<span class="token punctuation">;</span>
A<span class="token punctuation">,</span>b<span class="token punctuation">,</span>Aeq<span class="token punctuation">,</span>beq定义了线性约束Ax ≤b<span class="token punctuation">,</span>Aeq·x <span class="token operator">=</span> beq如果没有线性约束，则A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>Aeq<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>beq<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
lb和ub是变量x的下界和上界，如果上界和下界没有约束，即x无下界也无上界，则lb<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>，ub<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>，也可以写成lb的各分量都为<span class="token operator">-</span><span class="token keyword">inf</span><span class="token punctuation">,</span>ub的各分量都为<span class="token keyword">inf</span><span class="token punctuation">;</span>
nonlcon是用M文件定义的非线性向量函数<span class="token function">c</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ceq</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
options定义了优化参数，可以使用Matlab缺省的参数设置。

初始值设置。限定条件内生成随机数就行。
<span class="token punctuation">[</span>x<span class="token punctuation">,</span>fval<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">fmincon</span><span class="token punctuation">(</span>fun<span class="token punctuation">,</span>x0<span class="token punctuation">,</span>A<span class="token punctuation">,</span>b<span class="token punctuation">,</span>Aeq<span class="token punctuation">,</span>beq<span class="token punctuation">,</span>lb<span class="token punctuation">,</span>ub<span class="token punctuation">,</span>nonlcon<span class="token punctuation">,</span>options<span class="token punctuation">)</span>


<span class="token comment">%首先 编写 目前 函数的 文件 </span>
<span class="token comment">% fun1.m </span>
<span class="token keyword">function</span> f<span class="token operator">=</span><span class="token function">fun1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
f<span class="token operator">=</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">%然后编写非线性的约束  </span>
<span class="token comment">% myconl1.m  c是不等式约束，ceq是等式约束</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>c<span class="token punctuation">,</span>ceq<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">myconl1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment">% 因为根据上面的图片格式，非线性的不等式约束是c(x)&lt;=0 即变成这个样式，就可以只有一个c了</span>
<span class="token function">c</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">400</span><span class="token punctuation">;</span>
<span class="token function">c</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1.1</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">440</span><span class="token punctuation">;</span>
<span class="token function">c</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1.21</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1.1</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">484</span><span class="token punctuation">;</span>
<span class="token function">c</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1.331</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1.21</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1.1</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">532.4</span><span class="token punctuation">;</span>
<span class="token comment">% 因为根据上面的图片格式，非线性的等式约束是ceq(x)=0 即变成这个样式，就可以只有一个ceq矩阵了</span>
<span class="token function">ceq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">3</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">%假设没有非线性约束则：</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>c<span class="token punctuation">,</span>ceq<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">myconl1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
ceq<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">% 然后 主函数：</span>
options <span class="token operator">=</span> optimset<span class="token punctuation">;</span>
x0<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>lb<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ub<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Aeq<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>beq<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span>z<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">fmincon</span><span class="token punctuation">(</span><span class="token string">&#39;fun1&#39;</span><span class="token punctuation">,</span>x0<span class="token punctuation">,</span>A<span class="token punctuation">,</span>b<span class="token punctuation">,</span>Aeq<span class="token punctuation">,</span>beq<span class="token punctuation">,</span>lb<span class="token punctuation">,</span>ub<span class="token punctuation">,</span><span class="token string">&#39;myconl1&#39;</span><span class="token punctuation">,</span>options<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="整数规划-lingo" tabindex="-1"><a class="header-anchor" href="#整数规划-lingo" aria-hidden="true">#</a> 整数规划：Lingo</h2><p>解决的是 线性的。。。</p><p>各个 变量 为 整数。------&gt;整数线性规划 目前的解决方法只适用于 线性的规划。</p><p>1.分枝定界法 2.割平面法 3.隐枚举法（0-1） 4.匈牙利法（0-1） 5 蒙特卡罗法</p>`,26),v={href:"https://www.cnblogs.com/goodtwo/p/11145699.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<p><strong>听课：</strong></p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">% 求解整数线性规划，变量限定为整数 </span>
<span class="token comment">%  整数规划  可能 找不到 可行解</span>


<span class="token comment">%割平面法</span>
<span class="token number">1</span>：首先不限制整数，求实数，如果无可行解则整数规划无解
<span class="token number">2</span>：若实数求的 解 为整数， 则是ILP的最优解
目前还是找整数解；


<span class="token comment">%分支定界求解</span>
<span class="token number">1</span>：首先不限制整数，求实数，如果无可行解则整数规划无解
<span class="token number">2</span>：若实数求的 解 为整数， 则是ILP的最优解
<span class="token number">3</span>：若不满足整数限制，然后遍历找寻 直到子问题无解or整数最优解
重点是：<span class="token function">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> 在实数解的上下整数两个值 疯狂试探。。 
虽然听着不是 最优解， 但是 这个主要是 要求 自变量为整数，倒是 目标函数不是很在意了。。
也就是说 首先求实数解： 然后根据变量的个数 暴力<span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>次  比如x1<span class="token operator">=</span><span class="token number">3.9</span> 那么第一次加限制 x1<span class="token operator">&gt;=</span><span class="token number">3</span>  第二次加限制 x2<span class="token operator">&lt;=</span><span class="token number">4</span>



<span class="token comment">%使用intlinprog函数。也可以进一步 形成0-1 规划。</span>
c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">5</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
lb<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intcon<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span>fval<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">intlinprog</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>intcon<span class="token punctuation">,</span>A<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>lb<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
x<span class="token punctuation">,</span>fval<span class="token operator">=</span><span class="token operator">-</span>fval
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码：</strong></p>`,3),x={href:"https://blog.csdn.net/weixin_42749944/article/details/118215025",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code>weixin_42749944   csdn的那个别人的号

<span class="token comment">%intlinprog函数</span>
Aeq <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
beq <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

A <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>
    <span class="token function">A</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">A</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b <span class="token operator">=</span> <span class="token number">10000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">400000</span><span class="token punctuation">;</span>

lb <span class="token operator">=</span> <span class="token number">1000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ub <span class="token operator">=</span> <span class="token number">10000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


x0 <span class="token operator">=</span> <span class="token number">1000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
r <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">5</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">&#39;</span><span class="token punctuation">;</span> <span class="token comment">%f=rx</span>
intcon <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">%30个变量</span>
<span class="token punctuation">[</span>x <span class="token punctuation">,</span> fval<span class="token punctuation">]</span>  <span class="token operator">=</span> <span class="token function">intlinprog</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>intcon<span class="token punctuation">,</span>A<span class="token punctuation">,</span>b<span class="token punctuation">,</span>Aeq<span class="token punctuation">,</span>beq<span class="token punctuation">,</span>lb<span class="token punctuation">,</span>ub<span class="token punctuation">)</span>
x<span class="token punctuation">,</span>fval<span class="token operator">=</span><span class="token operator">-</span>fval





<span class="token comment">%分支定界算法代码</span>
<span class="token comment">%% 问题1</span>
A <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>
    <span class="token function">A</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">A</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b <span class="token operator">=</span> <span class="token number">10000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">400000</span><span class="token punctuation">;</span>

lb <span class="token operator">=</span> <span class="token number">1000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ub <span class="token operator">=</span> <span class="token number">10000</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

c <span class="token operator">=</span>  <span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">5</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">&#39;</span><span class="token punctuation">;</span>

optX <span class="token operator">=</span> lb<span class="token punctuation">;</span><span class="token comment">%存放最优解的x，初始迭代点(0,0)</span>
optVal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">%最优解</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span> fit<span class="token punctuation">,</span> exitF<span class="token punctuation">,</span> iter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">BranchBound1</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub<span class="token punctuation">,</span> optX<span class="token punctuation">,</span> optVal<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">%% 问题2</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.1</span> <span class="token number">0.7</span> <span class="token number">0.6</span> <span class="token number">0.2</span> <span class="token number">0.9</span> <span class="token number">0.5</span> <span class="token number">0.1</span> <span class="token number">0.5</span> <span class="token number">0.7</span> <span class="token number">0.4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b <span class="token operator">=</span> <span class="token number">2.5</span><span class="token punctuation">;</span>
C <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">9</span> <span class="token number">4</span> <span class="token number">7</span> <span class="token number">5</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
lb <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ub <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

optX <span class="token operator">=</span> lb<span class="token punctuation">;</span><span class="token comment">%存放最优解的x，初始迭代点(0,0)</span>
optVal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">%最优解</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span> fit<span class="token punctuation">,</span> exitF<span class="token punctuation">,</span> iter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">BranchBound1</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> C<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub<span class="token punctuation">,</span> optX<span class="token punctuation">,</span> optVal<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>




<span class="token comment">%A,b,c分别对应此题的不等式约束系数矩阵，不等式约束常数向量，目标函数系数向量</span>
<span class="token comment">%Aeq   等式约束系数矩阵,   Beq    等式约束常数向量</span>
<span class="token comment">%vlb   定义域的下界        vub    定义域的上界</span>
<span class="token comment">%optXin   每次迭代的最优x   optF   每次迭代最优的f值  iter迭代次数</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>xstar<span class="token punctuation">,</span> fxstar<span class="token punctuation">,</span> flagOut<span class="token punctuation">,</span> iter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">BranchBound1</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> Aeq<span class="token punctuation">,</span> Beq<span class="token punctuation">,</span> vlb<span class="token punctuation">,</span> vub<span class="token punctuation">,</span> optXin<span class="token punctuation">,</span> optF<span class="token punctuation">,</span> iter<span class="token punctuation">)</span>
global optX optVal optFlag<span class="token punctuation">;</span><span class="token comment">%将最优解定义为全局变量</span>
iter <span class="token operator">=</span> iter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
optX <span class="token operator">=</span> optXin<span class="token punctuation">;</span> optVal <span class="token operator">=</span> optF<span class="token punctuation">;</span><span class="token comment">%更新迭代得到的值</span>
<span class="token comment">% options = optimoptions(&quot;linprog&quot;, &#39;Algorithm&#39;, &#39;interior-point-legacy&#39;, &#39;display&#39;, &#39;none&#39;);</span>

<span class="token punctuation">[</span>x<span class="token punctuation">,</span> fit<span class="token punctuation">,</span> status<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">linprog</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> Aeq<span class="token punctuation">,</span> Beq<span class="token punctuation">,</span> vlb<span class="token punctuation">,</span> vub<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%status返回算法迭代停止原因</span>
<span class="token comment">%status = 1 算法收敛于解x，即x是线性规划的最优解</span>
<span class="token keyword">if</span> status <span class="token operator">~=</span> <span class="token number">1</span><span class="token comment">%没有找到最优解，此分支不用继续迭代下去，返回</span>
    xstar <span class="token operator">=</span> x<span class="token punctuation">;</span>
    fxstar <span class="token operator">=</span> fit<span class="token punctuation">;</span>
    flagOut <span class="token operator">=</span> status<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token keyword">if</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1e-3</span><span class="token comment">%找到的函数最优解仍不是整数解</span>
    <span class="token keyword">if</span> fit <span class="token operator">&gt;</span> optVal   <span class="token comment">%此题求解的是max,此时的函数值大于之前解得的值</span>
        xstar <span class="token operator">=</span> x<span class="token punctuation">;</span>
        fxstar <span class="token operator">=</span> fit<span class="token punctuation">;</span>
        flagOut <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    
<span class="token keyword">else</span><span class="token comment">%此时解得的函数解为整数解，此分支求解结束，不再继续向下求解，返回</span>
    <span class="token keyword">if</span> fit <span class="token operator">&gt;</span> optVal   <span class="token comment">%此题求解的是max,此时的函数值大于之前解得的值</span>
        xstar <span class="token operator">=</span> x<span class="token punctuation">;</span>
        fxstar <span class="token operator">=</span> fit<span class="token punctuation">;</span>
        flagOut <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">101</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>   <span class="token comment">%解出的值&lt;之前解得的值，先放入全局变量中暂时存放</span>
        optVal <span class="token operator">=</span> fit<span class="token punctuation">;</span>
        optX <span class="token operator">=</span> x<span class="token punctuation">;</span>
        optFlag <span class="token operator">=</span> status<span class="token punctuation">;</span>
        xstar <span class="token operator">=</span> x<span class="token punctuation">;</span>
        fxstar <span class="token operator">=</span> fit<span class="token punctuation">;</span>
        flagOut <span class="token operator">=</span> status<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
midX <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%得到x对应的小数部分</span>
notIntV <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>midX <span class="token operator">&gt;</span> <span class="token number">1e-3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%得到非整数的x的索引值，find()函数返回非0的索引值</span>
pXidx <span class="token operator">=</span> <span class="token function">notIntV</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%得到第一个非整数x的下标索引</span>
tempVlb <span class="token operator">=</span> vlb<span class="token punctuation">;</span><span class="token comment">%临时拷贝一份</span>
tempVub <span class="token operator">=</span> vub<span class="token punctuation">;</span>
<span class="token comment">%fix(x) 函数将x中元素零方向取整</span>
<span class="token keyword">if</span> <span class="token function">vub</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token function">fix</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token comment">%原上界大于此时找到的分界的位置值</span>
    <span class="token function">tempVlb</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">fix</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">%将这个分界位置值作为新的下界参数传入，进一步递归</span>
    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">BranchBound1</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> Aeq<span class="token punctuation">,</span> Beq<span class="token punctuation">,</span> tempVlb<span class="token punctuation">,</span> vub<span class="token punctuation">,</span> optX<span class="token punctuation">,</span> optVal<span class="token punctuation">,</span> iter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token keyword">if</span> <span class="token function">vlb</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">fix</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">%原下界小于此时找到的分界的位置值</span>
    <span class="token function">tempVub</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">fix</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>pXidx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%将这个分界位置值作为新的上界参数传入，进一步递归</span>
    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">BranchBound1</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> Aeq<span class="token punctuation">,</span> Beq<span class="token punctuation">,</span> vlb<span class="token punctuation">,</span> tempVub<span class="token punctuation">,</span> optX<span class="token punctuation">,</span> optVal<span class="token punctuation">,</span> iter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
xstar <span class="token operator">=</span> optX<span class="token punctuation">;</span>
fxstar <span class="token operator">=</span> optVal<span class="token punctuation">;</span>
flagOut <span class="token operator">=</span> optFlag<span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2000年B题：</strong></p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%复杂的整数规划线性问题；就是 自变量 有几百个的。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_0-1整数规划" tabindex="-1"><a class="header-anchor" href="#_0-1整数规划" aria-hidden="true">#</a> 0-1整数规划：</h2>`,4),h={href:"https://www.cnblogs.com/goodtwo/p/11145699.html",target:"_blank",rel:"noopener noreferrer"},w=t(`<p><strong>听课：目前解决线性的</strong></p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%使用函数 intlinprog 使得 所有为整数 并且下限制为0，上限制 为1</span>
f<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span> <span class="token number">5</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token number">2</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">&#39;</span><span class="token punctuation">;</span>
intcon<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
lb<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ub<span class="token operator">=</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span>fval<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">intlinprog</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span>intcon<span class="token punctuation">,</span>A<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>lb<span class="token punctuation">,</span>ub<span class="token punctuation">)</span><span class="token punctuation">;</span>
x<span class="token punctuation">,</span>fval<span class="token operator">=</span><span class="token operator">-</span>fval

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="遗传算法" tabindex="-1"><a class="header-anchor" href="#遗传算法" aria-hidden="true">#</a> 遗传算法：</h2><p>简单遗传算法：SGA；启发式随机搜索算法。每次结果不一样。</p><p>对于遗传算法 求解 那些规划的 问题的时候 需要进行 先列出 方程 然后 进行 遗传算法的构造这样才更顺利</p><p>基于遗传算法 逐周求解 最佳的结果</p><p>智能算法<br> 这次是求 多目标？ 非线性？ 整数规划？0——1？<br> 多目标转化为 单目标 or智能</p><h2 id="基础知识解集" tabindex="-1"><a class="header-anchor" href="#基础知识解集" aria-hidden="true">#</a> 基础知识解集：</h2>`,8),y={href:"https://cloud.tencent.com/developer/article/1830041",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"PDF 的 P54过程",-1),q={href:"https://www.cnblogs.com/LoganChen/p/7509702.html",target:"_blank",rel:"noopener noreferrer"},B=t(`<p>1.将可行的 解 当成染色体， 然后 不断组合 得到 生存下来的 最优解。 再加入评判指标 以及 变异 等等。最后得到一个个体？还是一对染色体。</p><h3 id="一般参数设置" tabindex="-1"><a class="header-anchor" href="#一般参数设置" aria-hidden="true">#</a> 一般参数设置：</h3><p>（1）种群规模： 1~100 （2）变异概率：0.0001~0.2 （3）交配概率：0.4~0.99 （4）进化代数 100~500 （5）种群初始化</p><h3 id="编解码-二进制编码" tabindex="-1"><a class="header-anchor" href="#编解码-二进制编码" aria-hidden="true">#</a> 编解码：二进制编码：</h3><p>设参数的取值范围 位 (L,U);</p><p>则使用 k 位 二进制编码 表示 该参数</p><h3 id="个体适应度评估" tabindex="-1"><a class="header-anchor" href="#个体适应度评估" aria-hidden="true">#</a> 个体适应度评估：</h3><p>应该就是评价指标吧？</p><h3 id="遗传运算" tabindex="-1"><a class="header-anchor" href="#遗传运算" aria-hidden="true">#</a> 遗传运算：</h3><p>染色体复制</p><p>染色体交叉</p><p>染色体变异/倒位</p><h2 id="普通函数最大值" tabindex="-1"><a class="header-anchor" href="#普通函数最大值" aria-hidden="true">#</a> 普通函数最大值：</h2><p>一般来说 对于 线性 的 都直接 进行 数学规划了。</p><p><img src="https://img-blog.csdnimg.cn/20200214151119686.png" alt="y=200exp(-0.05x).*sin(x)" loading="lazy">在[-2 2]区间上的最大值</p><p>先在matlab上画个图 找到 最大值的大致区间：</p><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%错误：应该是 .*  </span>
x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token number">200</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.05</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%正确</span>
x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span>
y<span class="token operator">=</span><span class="token number">200</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.05</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行遗传因子的编码个数确定：</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="language-c++"><code>//对于N要进行适应性的更改，对于字段错误
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define inf 0x3f3f3f3f
#define N 5001
double n,m,k,s,g,d;
double x,y,z,res;
char ch;
string str;
vector&lt;int&gt;v[N];
int main() {
    cout&lt;&lt;&quot;请输入要保留的精度的位数：&quot;&lt;&lt;endl;
    cin&gt;&gt;n;
    cout&lt;&lt;&quot;请输入x的两边界限：&quot;&lt;&lt;endl;
    while(cin&gt;&gt;x&gt;&gt;y){
            for(res=1; ;res++){
                if(  (y-x)*pow(10,n)&gt;pow(2,res-1)&amp;&amp; (y-x)*pow(10,n)&lt;=pow(2,res)-1 ){
                    break;
                }
            }

        cout&lt;&lt;x&lt;&lt;&quot;~&quot;&lt;&lt;y&lt;&lt;&quot;的编码位数为。&quot;&lt;&lt; res&lt;&lt;endl;
        cout&lt;&lt;&quot;请输入x的两边界限：&quot;&lt;&lt;endl;

    }
	return 0;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),z={href:"https://blog.csdn.net/weixin_41122036/article/details/99621870",target:"_blank",rel:"noopener noreferrer"},A=t(`<div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%GA</span>
clear<span class="token punctuation">;</span>
clc<span class="token punctuation">;</span>
<span class="token comment">%种群大小</span>
popsize <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
<span class="token comment">%二进制编码长度</span>
x_L<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3.0</span> <span class="token number">4.1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> x_U<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">12.1</span> <span class="token number">5.8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">%下面的这两个 自己算。</span>
x1length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
x2length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
chromelength <span class="token operator">=</span> x1length<span class="token operator">+</span>x2length<span class="token punctuation">;</span>
<span class="token comment">%交叉概率</span>
pc <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">;</span>
<span class="token comment">%变异概率</span>
pm <span class="token operator">=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
<span class="token comment">%初始种群 %pop = population 种群</span>
pop <span class="token operator">=</span> <span class="token function">initpop</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%迭代100次</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span>
   <span class="token comment">%计算适应度值?</span>
   objvalue <span class="token operator">=</span> <span class="token function">cal_objvalue</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
   fitvalue <span class="token operator">=</span> objvalue<span class="token punctuation">;</span>	
   <span class="token comment">%选择复制</span>
   newpop <span class="token operator">=</span> <span class="token function">selection</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%交换</span>
   newpop <span class="token operator">=</span> <span class="token function">crossover</span><span class="token punctuation">(</span>newpop<span class="token punctuation">,</span> pc<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%变异</span>
   newpop <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span>newpop<span class="token punctuation">,</span> pm<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%更新种群</span>
   pop <span class="token operator">=</span> newpop<span class="token punctuation">;</span>
   <span class="token comment">%寻找最优解并打印在command窗口</span>
   <span class="token punctuation">[</span>bestindividual<span class="token punctuation">,</span> bestfit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">best</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">[</span>x1b<span class="token punctuation">,</span> x2b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>bestindividual<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best x1 is --&gt;&gt;%5.3f\\n&#39;</span><span class="token punctuation">,</span> x1b<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best x2 is --&gt;&gt;%5.2f\\n&#39;</span><span class="token punctuation">,</span> x2b<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best y is --&gt;&gt;%5.2f\\n&#39;</span><span class="token punctuation">,</span> bestfit<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%更新后的种群</span>
   <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>newpop<span class="token punctuation">)</span><span class="token punctuation">;</span>
   y <span class="token operator">=</span> <span class="token function">cal_objvalue</span><span class="token punctuation">(</span>newpop<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%每迭代10次就输出一次图像，观察效果</span>
   <span class="token keyword">if</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
   	figure<span class="token punctuation">;</span>
    <span class="token comment">%下面这个要更改</span>
   	x3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2.048</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">2.048</span><span class="token punctuation">;</span>
   	x4 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2.048</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">2.048</span><span class="token punctuation">;</span>
   	<span class="token punctuation">[</span>x5<span class="token punctuation">,</span> x6<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> x4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">%下面这个要更改。</span>
   	y1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> x5<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>x6 <span class="token operator">-</span> x5<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">;</span>
   	<span class="token function">mesh</span><span class="token punctuation">(</span>x5<span class="token punctuation">,</span> x6<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>
   	hold on<span class="token punctuation">;</span>
   	<span class="token function">plot3</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   	<span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;iteration is&#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">end</span>
<span class="token keyword">end</span>




<span class="token comment">%initpop.m</span>
<span class="token comment">%初始化种群</span>
<span class="token keyword">function</span> pop <span class="token operator">=</span> <span class="token function">initpop</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span>
<span class="token comment">%随机产生90*20的0 1序列作为初始化种群 每一个都包含 前x1的编码 和 后x2的编码。</span>
pop <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">%cal_objvalue.m</span>
<span class="token comment">%计算适应度函数（也就是香蕉函数值）</span>
<span class="token keyword">function</span> objvalue <span class="token operator">=</span> <span class="token function">cal_objvalue</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span>

<span class="token comment">%下面这个函数是进行解码的。</span>
<span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%这个函数 就是目标函数（有前提）。</span>
objvalue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> x1<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>x2 <span class="token operator">-</span> x1<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">;</span>



<span class="token comment">%binary2decimal.m</span>
<span class="token comment">%二进制转化为十进制</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>pop3 pop4<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span>

<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%px为行数  py为列数</span>
<span class="token comment">%计算x1的数值矩阵</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>py <span class="token operator">-</span> <span class="token number">10</span>
	<span class="token function">pop1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2.</span><span class="token operator">^</span><span class="token punctuation">(</span>py <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token comment">%计算x2的数值矩阵</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token operator">:</span>py
	<span class="token function">pop2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span> <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2.</span><span class="token operator">^</span><span class="token punctuation">(</span>py <span class="token operator">-</span> <span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token comment">%x1求和后的列向量</span>
temp1 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>pop1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%x2求和后的列向量 </span>
temp2 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>pop2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%x1转换为十进制</span>
pop3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2.048</span> <span class="token operator">+</span> <span class="token number">4.096</span><span class="token operator">/</span><span class="token number">1023</span><span class="token operator">*</span>temp1<span class="token punctuation">;</span>
<span class="token comment">%x2转化为十进制</span>
pop4 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2.048</span> <span class="token operator">+</span> <span class="token number">4.096</span><span class="token operator">/</span><span class="token number">1023</span><span class="token operator">*</span>temp2<span class="token punctuation">;</span>


<span class="token comment">%selection.m</span>
<span class="token comment">%选择和复制  轮盘赌法</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">selection</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
totalfit <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
p_fitvalue <span class="token operator">=</span> fitvalue<span class="token operator">/</span>totalfit<span class="token punctuation">;</span>
<span class="token comment">%概率求和排序</span>
p_fitvalue <span class="token operator">=</span> <span class="token function">cumsum</span><span class="token punctuation">(</span>p_fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%产生随机概率并排序</span>
ms <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span>px<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fitin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
newin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> newin <span class="token operator">&lt;=</span> px
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">ms</span><span class="token punctuation">(</span>newin<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">p_fitvalue</span><span class="token punctuation">(</span>fitin<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span>newin<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span>fitin<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		newin <span class="token operator">=</span> newin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
		
	<span class="token keyword">else</span>
		fitin <span class="token operator">=</span> fitin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
	
<span class="token keyword">end</span>


<span class="token comment">%crossover.m</span>
<span class="token comment">%交换</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">crossover</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
newpop <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%理论是随机交换（交换哪个，和谁交换，交换哪一部分都是随机的），这里采用i和i+1的随机部分交换，尽可能达到随机</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">:</span>px <span class="token operator">-</span> <span class="token number">1</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>rand <span class="token operator">&lt;</span> pc<span class="token punctuation">)</span>
		cpoint <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span>py<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>cpoint<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> cpoint <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">:</span>py<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>cpoint<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> cpoint<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>py<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>


<span class="token comment">%mutation.m</span>
<span class="token comment">%变异</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> pm<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
newpop <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>px
	<span class="token keyword">if</span><span class="token punctuation">(</span>rand <span class="token operator">&lt;</span> pm<span class="token punctuation">)</span>
		mpoint <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span>py<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> mpoint <span class="token operator">&lt;=</span> <span class="token number">0</span>
			mpoint <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			
		<span class="token keyword">end</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
			<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
			<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
		
	<span class="token keyword">else</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment">%best.m</span>
<span class="token comment">%选择最优个体</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>bestindividual bestfit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">best</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span>

<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
bestfit <span class="token operator">=</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bestindividual <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span>px
	<span class="token keyword">if</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> bestfit
		bestfit <span class="token operator">=</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bestindividual <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token comment">%主程序：用遗传算法求解y=200*exp(-0.05*x).*sin(x)在[-2 2]区间上的最大值</span>
clc<span class="token punctuation">;</span>
clear all<span class="token punctuation">;</span>
close all<span class="token punctuation">;</span>
global BitLength
global boundsbegin
global boundsend
bounds<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%一维自变量的取值范围</span>
precision<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">;</span> <span class="token comment">%运算精度</span>
boundsbegin<span class="token operator">=</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
boundsend<span class="token operator">=</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%计算如果满足求解精度至少需要多长的染色体</span>
BitLength<span class="token operator">=</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token punctuation">(</span>boundsend<span class="token operator">-</span>boundsbegin<span class="token punctuation">)</span><span class="token operator">&#39;</span> <span class="token operator">./</span> precision<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
popsize<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">;</span> <span class="token comment">%初始种群大小</span>
Generationnmax<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">;</span>  <span class="token comment">%最大代数</span>
pcrossover<span class="token operator">=</span><span class="token number">0.90</span><span class="token punctuation">;</span> <span class="token comment">%交配概率</span>
pmutation<span class="token operator">=</span><span class="token number">0.09</span><span class="token punctuation">;</span> <span class="token comment">%变异概率</span>
<span class="token comment">%产生初始种群</span>
population<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span>BitLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%计算适应度,返回适应度Fitvalue和累积概率cumsump</span>
<span class="token punctuation">[</span>Fitvalue<span class="token punctuation">,</span>cumsump<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">fitnessfun</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">%子程序1 </span>
Generation<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> Generation<span class="token operator">&lt;</span>Generationnmax<span class="token operator">+</span><span class="token number">1</span>
   <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">:</span>popsize 
      <span class="token comment">%选择操作</span>
      seln<span class="token operator">=</span><span class="token function">selection</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span>cumsump<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">% 子程序2</span>
      <span class="token comment">%交叉操作</span>
      scro<span class="token operator">=</span><span class="token function">crossover</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span>seln<span class="token punctuation">,</span>pcrossover<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">%子程序3</span>
      <span class="token function">scnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">scnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">%变异操作</span>
      <span class="token function">smnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">mutation</span><span class="token punctuation">(</span><span class="token function">scnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pmutation<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">%子程序4</span>
      <span class="token function">smnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">mutation</span><span class="token punctuation">(</span><span class="token function">scnew</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pmutation<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">end</span>
   population<span class="token operator">=</span>smnew<span class="token punctuation">;</span>  <span class="token comment">%产生了新的种群</span>
   <span class="token comment">%计算新种群的适应度   </span>
   <span class="token punctuation">[</span>Fitvalue<span class="token punctuation">,</span>cumsump<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">fitnessfun</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">%记录当前代最好的适应度和平均适应度</span>
   <span class="token punctuation">[</span>fmax<span class="token punctuation">,</span>nmax<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>Fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
   fmean<span class="token operator">=</span><span class="token function">mean</span><span class="token punctuation">(</span>Fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">ymax</span><span class="token punctuation">(</span>Generation<span class="token punctuation">)</span><span class="token operator">=</span>fmax<span class="token punctuation">;</span>
   <span class="token function">ymean</span><span class="token punctuation">(</span>Generation<span class="token punctuation">)</span><span class="token operator">=</span>fmean<span class="token punctuation">;</span>
   <span class="token comment">%记录当前代的最佳染色体个体</span>
   x<span class="token operator">=</span><span class="token function">transform2to10</span><span class="token punctuation">(</span><span class="token function">population</span><span class="token punctuation">(</span>nmax<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">%子程序5</span>
   <span class="token comment">%自变量取值范围是[-2 2],需要把经过遗传运算的最佳染色体整合到[-2 2]区间</span>
  xx<span class="token operator">=</span>boundsbegin<span class="token operator">+</span>x<span class="token operator">*</span><span class="token punctuation">(</span>boundsend<span class="token operator">-</span>boundsbegin<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">power</span><span class="token punctuation">(</span><span class="token punctuation">(</span>boundsend<span class="token punctuation">)</span><span class="token punctuation">,</span>BitLength<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">xmax</span><span class="token punctuation">(</span>Generation<span class="token punctuation">)</span><span class="token operator">=</span>xx<span class="token punctuation">;</span>
   Generation<span class="token operator">=</span>Generation<span class="token operator">+</span><span class="token number">1</span>
<span class="token keyword">end</span>
Generation<span class="token operator">=</span>Generation<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
Bestpopulation<span class="token operator">=</span>xx
Besttargetfunvalue<span class="token operator">=</span><span class="token function">targetfun</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span>                  <span class="token comment">%子程序6</span>
<span class="token comment">%绘制经过遗传运算后的适应度曲线。一般地，如果进化过程中种群的平均适应度与最大适</span>
<span class="token comment">%应度在曲线上有相互趋同的形态，表示算法收敛进行得很顺利，没有出现震荡；在这种前</span>
<span class="token comment">%提下，最大适应度个体连续若干代都没有发生进化表明种群已经成熟。</span>
<span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hand1<span class="token operator">=</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>Generation<span class="token punctuation">,</span>ymax<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>hand1<span class="token punctuation">,</span><span class="token string">&#39;linestyle&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;linewidth&#39;</span><span class="token punctuation">,</span><span class="token number">1.8</span><span class="token punctuation">,</span><span class="token string">&#39;marker&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;markersize&#39;</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
hold on<span class="token punctuation">;</span>
hand2<span class="token operator">=</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>Generation<span class="token punctuation">,</span>ymean<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>hand2<span class="token punctuation">,</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;linestyle&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;linewidth&#39;</span><span class="token punctuation">,</span><span class="token number">1.8</span><span class="token punctuation">,</span><span class="token punctuation">...</span>
<span class="token string">&#39;marker&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;h&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;markersize&#39;</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">&#39;进化代数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">&#39;最大/平均适应度&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">xlim</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> Generationnmax<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">&#39;最大适应度&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;平均适应度&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
box off<span class="token punctuation">;</span>hold off<span class="token punctuation">;</span>

<span class="token comment">%子程序1：计算适应度函数, 函数名称存储为fitnessfun</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>Fitvalue<span class="token punctuation">,</span>cumsump<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">fitnessfun</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span><span class="token punctuation">;</span>
global BitLength
global boundsbegin
global boundsend
popsize<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%有popsize个个体</span>
<span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>popsize
   x<span class="token operator">=</span><span class="token function">transform2to10</span><span class="token punctuation">(</span><span class="token function">population</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%将二进制转换为十进制</span>
    <span class="token comment">%转化为[-2,2]区间的实数</span>
xx<span class="token operator">=</span>boundsbegin<span class="token operator">+</span>x<span class="token operator">*</span><span class="token punctuation">(</span>boundsend<span class="token operator">-</span>boundsbegin<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">power</span><span class="token punctuation">(</span><span class="token punctuation">(</span>boundsend<span class="token punctuation">)</span><span class="token punctuation">,</span>BitLength<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
   <span class="token function">Fitvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">targetfun</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%计算函数值，即适应度</span>
<span class="token keyword">end</span>
<span class="token comment">%给适应度函数加上一个大小合理的数以便保证种群适应值为正数</span>
Fitvalue<span class="token operator">=</span>Fitvalue<span class="token operator">&#39;</span><span class="token operator">+</span><span class="token number">230</span><span class="token punctuation">;</span>
<span class="token comment">%计算选择概率</span>
fsum<span class="token operator">=</span><span class="token function">sum</span><span class="token punctuation">(</span>Fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
Pperpopulation<span class="token operator">=</span>Fitvalue<span class="token operator">/</span>fsum<span class="token punctuation">;</span>
<span class="token comment">%计算累积概率</span>
<span class="token function">cumsump</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Pperpopulation</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>popsize
   <span class="token function">cumsump</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">cumsump</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">Pperpopulation</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
cumsump<span class="token operator">=</span>cumsump<span class="token operator">&#39;</span><span class="token punctuation">;</span>

<span class="token comment">%子程序2：新种群选择操作, 函数名称存储为selection.m</span>
<span class="token keyword">function</span> seln<span class="token operator">=</span><span class="token function">selection</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span>cumsump<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%从种群中选择两个个体</span>
<span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span>
   r<span class="token operator">=</span>rand<span class="token punctuation">;</span>  <span class="token comment">%产生一个随机数</span>
   prand<span class="token operator">=</span>cumsump<span class="token operator">-</span>r<span class="token punctuation">;</span>
   <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token function">prand</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span>
       <span class="token number">j</span><span class="token operator">=</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">end</span>
   <span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">j</span><span class="token punctuation">;</span> <span class="token comment">%选中个体的序号</span>
<span class="token keyword">end</span>


<span class="token comment">%子程序3：新种群交叉操作,函数名称存储为crossover.m</span>
<span class="token keyword">function</span> scro<span class="token operator">=</span><span class="token function">crossover</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span>seln<span class="token punctuation">,</span>pc<span class="token punctuation">)</span><span class="token punctuation">;</span>
BitLength<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pcc<span class="token operator">=</span><span class="token function">IfCroIfMut</span><span class="token punctuation">(</span>pc<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%根据交叉概率决定是否进行交叉操作，1则是，0则否</span>
<span class="token keyword">if</span> pcc<span class="token operator">==</span><span class="token number">1</span>
   chb<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span><span class="token punctuation">(</span>BitLength<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">%在[1,BitLength-1]范围内随机产生一个交叉位</span>
   <span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>chb<span class="token punctuation">)</span> <span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>chb<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>BitLength<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>chb<span class="token punctuation">)</span> <span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>chb<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>BitLength<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
   <span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">scro</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">population</span><span class="token punctuation">(</span><span class="token function">seln</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>  

<span class="token comment">%子程序4：新种群变异操作，函数名称存储为mutation.m</span>
<span class="token keyword">function</span> snnew<span class="token operator">=</span><span class="token function">mutation</span><span class="token punctuation">(</span>snew<span class="token punctuation">,</span>pmutation<span class="token punctuation">)</span><span class="token punctuation">;</span>
BitLength<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>snew<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
snnew<span class="token operator">=</span>snew<span class="token punctuation">;</span>
pmm<span class="token operator">=</span><span class="token function">IfCroIfMut</span><span class="token punctuation">(</span>pmutation<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%根据变异概率决定是否进行变异操作，1则是，0则否     %子程序7</span>
<span class="token keyword">if</span> pmm<span class="token operator">==</span><span class="token number">1</span>
   chb<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span><span class="token punctuation">(</span>BitLength<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">%在[1,BitLength]范围内随机产生一个变异位</span>
   <span class="token function">snnew</span><span class="token punctuation">(</span>chb<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">snew</span><span class="token punctuation">(</span>chb<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>   


<span class="token comment">%子程序7：判断遗传运算是否需要进行交叉或变异, 函数名称存储为IfCroIfMut.m</span>
<span class="token keyword">function</span> pcc<span class="token operator">=</span><span class="token function">IfCroIfMut</span><span class="token punctuation">(</span>mutORcro<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
l<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">*</span>mutORcro<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>l<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
n<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
pcc<span class="token operator">=</span><span class="token function">test</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  


<span class="token comment">%子程序5：将2进制数转换为10进制数,函数名称存储为transform2to10.m</span>
<span class="token keyword">function</span> x<span class="token operator">=</span><span class="token function">transform2to10</span><span class="token punctuation">(</span>Population<span class="token punctuation">)</span><span class="token punctuation">;</span>
BitLength<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>Population<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
x<span class="token operator">=</span><span class="token function">Population</span><span class="token punctuation">(</span>BitLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>BitLength<span class="token operator">-</span><span class="token number">1</span>
   x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token function">Population</span><span class="token punctuation">(</span>BitLength<span class="token operator">-</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">power</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token comment">%子程序6：对于优化最大值或极大值函数问题，目标函数可以作为适应度函数</span>
<span class="token comment">%函数名称存储为targetfun.m</span>
<span class="token keyword">function</span> y<span class="token operator">=</span><span class="token function">targetfun</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%目标函数</span>
y<span class="token operator">=</span><span class="token number">200</span><span class="token operator">*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.05</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">%可更改！！</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多约束非线性规划问题的求解" tabindex="-1"><a class="header-anchor" href="#多约束非线性规划问题的求解" aria-hidden="true">#</a> 多约束非线性规划问题的求解：</h2><figure><img src="https://cdn.jsdelivr.net/gh/zben777/figures/img/202310151930122.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><div class="language-matlab line-numbers-mode" data-ext="matlab"><pre class="language-matlab"><code><span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
clear<span class="token punctuation">;</span>
clc<span class="token punctuation">;</span>
<span class="token comment">%种群大小</span>
popsize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token comment">%二进制编码长度?</span>
chromelength <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token comment">%交叉概率</span>
pc <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">;</span>
<span class="token comment">%变异概率</span>
pm <span class="token operator">=</span> <span class="token number">0.001</span><span class="token punctuation">;</span>
<span class="token comment">%初始种群 %pop = population 种群</span>
pop <span class="token operator">=</span> <span class="token function">initpop</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%迭代100次?</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span>
	<span class="token comment">%计算适应度</span>
	objvalue <span class="token operator">=</span> <span class="token function">cal_objvalue</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
	fitvalue <span class="token operator">=</span> objvalue<span class="token punctuation">;</span>	
	<span class="token comment">%选择复制</span>
	newpop <span class="token operator">=</span> <span class="token function">selection</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">%交换</span>
	newpop <span class="token operator">=</span> <span class="token function">crossover</span><span class="token punctuation">(</span>newpop<span class="token punctuation">,</span> pc<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">%变异</span>
	newpop <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span>newpop<span class="token punctuation">,</span> pm<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">%更新种群</span>
	pop <span class="token operator">=</span> newpop<span class="token punctuation">;</span>
	<span class="token comment">%最佳点</span>
	<span class="token punctuation">[</span>bestindividual<span class="token punctuation">,</span> bestfit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">best</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">[</span>x1b<span class="token punctuation">,</span> x2b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>bestindividual<span class="token punctuation">)</span><span class="token punctuation">;</span>
	fb <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span>x1b<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>x1b<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2b<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span>x1b<span class="token operator">.*</span>x2b <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">%更新后的种群</span>
	<span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>newpop<span class="token punctuation">)</span><span class="token punctuation">;</span>
	y <span class="token operator">=</span> <span class="token function">cal_objvalue</span><span class="token punctuation">(</span>newpop<span class="token punctuation">)</span><span class="token punctuation">;</span>
	f <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>x1<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span>x1<span class="token operator">.*</span>x2 <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">%每迭代一次输出一次图像?</span>
	<span class="token keyword">if</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
		figure<span class="token punctuation">;</span>
		x3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">;</span>
		x4 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">;</span>
		<span class="token punctuation">[</span>x5<span class="token punctuation">,</span> x6<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> x4<span class="token punctuation">)</span><span class="token punctuation">;</span>
		y1 <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span>x5<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>x5<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x6<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span>x5<span class="token operator">.*</span>x6 <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x6 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">mesh</span><span class="token punctuation">(</span>x5<span class="token punctuation">,</span> x6<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>
		hold on<span class="token punctuation">;</span>
		<span class="token function">plot3</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> f<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39; iteration is &#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best x1 is ---&gt;&gt;%5.2f\\n&#39;</span><span class="token punctuation">,</span> x1b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best x2 is ---&gt;&gt;%5.2f\\n&#39;</span><span class="token punctuation">,</span> x2b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;the best f is ---&gt;&gt;%5.2f\\n&#39;</span><span class="token punctuation">,</span> fb<span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">%初始化种群</span>
<span class="token keyword">function</span> pop <span class="token operator">=</span> <span class="token function">initpop</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span>
<span class="token comment">%随机产生90*20的0 1序列作为初始化种群</span>
pop <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span>popsize<span class="token punctuation">,</span> chromelength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">%二进制转化为十进制</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>pop3 pop4<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span>

<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%计算x1的数值矩阵</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>py <span class="token operator">-</span> <span class="token number">10</span>
	<span class="token function">pop1</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2.</span><span class="token operator">^</span><span class="token punctuation">(</span>py <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token comment">%计算x2的数值矩阵</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token operator">:</span>py
	<span class="token function">pop2</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span> <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2.</span><span class="token operator">^</span><span class="token punctuation">(</span>py <span class="token operator">-</span> <span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token comment">%x1求和后的列向量</span>
temp1 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>pop1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%x2求和后的列向量 </span>
temp2 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>pop2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%x1转换位十进制</span>
pop3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token operator">/</span><span class="token number">1023</span><span class="token operator">*</span>temp1<span class="token punctuation">;</span>
<span class="token comment">%x2转换位十进制</span>
pop4 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token operator">/</span><span class="token number">1023</span><span class="token operator">*</span>temp2<span class="token punctuation">;</span>



<span class="token comment">%适应度函数</span>

<span class="token keyword">function</span> objvalue <span class="token operator">=</span> <span class="token function">cal_value</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">binary2decimal</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
g1 <span class="token operator">=</span> <span class="token number">1.5</span> <span class="token operator">+</span> x1<span class="token operator">.*</span>x2 <span class="token operator">-</span> x1 <span class="token operator">-</span> x2<span class="token punctuation">;</span>
g2 <span class="token operator">=</span> <span class="token operator">-</span> x1<span class="token operator">.*</span>x2<span class="token punctuation">;</span>
<span class="token comment">%f值</span>
f <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token operator">.*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>x1<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span>x1<span class="token operator">.*</span>x2 <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>x2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>px
	<span class="token comment">%满足约束	</span>
	<span class="token keyword">if</span> <span class="token function">g1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">g2</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">10</span>
		<span class="token comment">%适应度函数</span>
		<span class="token keyword">if</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">100</span>
			<span class="token function">objvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span>
			<span class="token function">objvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
	<span class="token keyword">else</span>
		<span class="token function">objvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>
	


<span class="token comment">%选择和复制  轮盘赌法</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">selection</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
totalfit <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
p_fitvalue <span class="token operator">=</span> fitvalue<span class="token operator">/</span>totalfit<span class="token punctuation">;</span>
<span class="token comment">%概率求和排序</span>
p_fitvalue <span class="token operator">=</span> <span class="token function">cumsum</span><span class="token punctuation">(</span>p_fitvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%产生随机概率并排序</span>
ms <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span>px<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fitin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
newin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> newin <span class="token operator">&lt;=</span> px
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">ms</span><span class="token punctuation">(</span>newin<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">p_fitvalue</span><span class="token punctuation">(</span>fitin<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span>newin<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span>fitin<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		newin <span class="token operator">=</span> newin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
		
	<span class="token keyword">else</span>
		fitin <span class="token operator">=</span> fitin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
	
<span class="token keyword">end</span>


<span class="token comment">%交换</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">crossover</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
newpop <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%理论是随机交换（交换哪个，和谁交换，交换哪一部分都是随机的），这里采用i和i+1的随机部分交换，尽可能达到随机</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">:</span>px <span class="token operator">-</span> <span class="token number">1</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>rand <span class="token operator">&lt;</span> pc<span class="token punctuation">)</span>
		cpoint <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span>py<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>cpoint<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> cpoint <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">:</span>py<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span>cpoint<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> cpoint<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>py<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>


<span class="token comment">%变异</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>newpop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mutation</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> pm<span class="token punctuation">)</span>
<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
newpop <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>px
	<span class="token keyword">if</span><span class="token punctuation">(</span>rand <span class="token operator">&lt;</span> pm<span class="token punctuation">)</span>
		mpoint <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token operator">*</span>py<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> mpoint <span class="token operator">&lt;=</span> <span class="token number">0</span>
			mpoint <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			
		<span class="token keyword">end</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
			<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
			<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> mpoint<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span>
		
	<span class="token keyword">else</span>
		<span class="token function">newpop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>


<span class="token comment">%选择最优个体</span>
<span class="token keyword">function</span> <span class="token punctuation">[</span>bestindividual bestfit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">best</span><span class="token punctuation">(</span>pop<span class="token punctuation">,</span> fitvalue<span class="token punctuation">)</span>

<span class="token punctuation">[</span>px<span class="token punctuation">,</span> py<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">;</span>
bestfit <span class="token operator">=</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bestindividual <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span>px
	<span class="token keyword">if</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> bestfit
		bestfit <span class="token operator">=</span> <span class="token function">fitvalue</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bestindividual <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function L(j,X){const a=e("ExternalLinkIcon");return c(),l("div",null,[k,r,u(" more "),m,n("p",null,[s("使用lsqcurvefit函数进行。输入xdata（"),n("a",d,[s("数组"),p(a)]),s("），在fun函数中运算得出结果，与ydata（数组）进行比对，调整x的取值，使最后的x取值满足最小二乘法意义下的残差平方和最小。")]),b,n("p",null,[n("a",v,[s("Matlab中intlinprog函数的用法总结 - Goodtwo - 博客园 (cnblogs.com)"),p(a)])]),f,n("p",null,[n("a",x,[s("(11条消息) 运筹学1——整数规划之分支定界法与MATLAB的intlinprog函数_綦迹523的博客-CSDN博客_intlinprog函数"),p(a)])]),g,n("p",null,[n("a",h,[s("Matlab中intlinprog函数的用法总结 - Goodtwo - 博客园 (cnblogs.com)"),p(a)])]),w,n("p",null,[n("a",y,[s("matlab优化算法之遗传算法（含代码）【数学建模】 - 腾讯云开发者社区-腾讯云 (tencent.com)"),p(a)])]),_,n("p",null,[n("a",q,[s("遗传算法介绍并附上Matlab代码 - alittlecomputer - 博客园 (cnblogs.com)"),p(a)])]),B,n("p",null,[s("整个过程：："),n("a",z,[s("(6条消息) 数学建模--遗传算法（从零开始学）_NeroChang的博客-CSDN博客_数学建模遗传算法"),p(a)])]),A])}const G=o(i,[["render",L],["__file","数学建模细节.html.vue"]]);export{G as default};
