import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as m,d as u,a as e,e as r,w as l,b as i,f as a}from"./app-2a2d189a.js";const d={},c=e("h1",{id:"h-第8章软件包管理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#h-第8章软件包管理","aria-hidden":"true"},"#"),i(" H-第8章软件包管理")],-1),h=e("p",null,"H-第8章软件包管理",-1),x=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"说明"),e("p",null,"主要是各种搜索找的学习；")],-1),_={class:"table-of-contents"},f=a('<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h2 id="概述框架" tabindex="-1"><a class="header-anchor" href="#概述框架" aria-hidden="true">#</a> 概述框架</h2><h2 id="h-第8章软件包管理-1" tabindex="-1"><a class="header-anchor" href="#h-第8章软件包管理-1" aria-hidden="true">#</a> H-第8章软件包管理</h2><h2 id="一、linux-下的软件包管理" tabindex="-1"><a class="header-anchor" href="#一、linux-下的软件包管理" aria-hidden="true">#</a> 一、Linux 下的软件包管理</h2><ul><li><p>接下来要介绍的是第八章——Linux 下的软件包管理。这部分内容相信大家并不陌生，因为无论何种系统，都需要安装软件。电脑要发挥作用，离不开各类工具软件。比如在 Windows 系统中，若要办公，需安装 Office 办公软件，如 Word、PPT、Excel 等；若要写代码，可能需要安装 Idea 等 IDE 工具；若要上网，得安装火狐、Chrome 或 IE 等浏览器工具。即便是服务器使用的 Linux 系统，要运行各种服务，也需要相应软件支持。软件的安装、升级更新及卸载，涉及统一的管理工具。</p></li><li><p>在 Windows 系统中，此类操作划分不细，通常关注的是软件的安装，安装后的更新通常由软件自身提供在线更新，卸载则统一在系统控制面板中进行相应操作。而在 Linux 系统中，并非如此分散，而是统一提供软件包管理工具，将软件的打包、安装、更新及卸载操作统一管理，这样更具系统性和合理性。</p></li><li><p>不同的 Linux 发行版本，可能有不同的软件包管理工具。有些同学使用 Ubuntu ，其属于 Debian 系列，这一系列使用的软件包管理工具是 APT ，这是个非常有名的工具。若要安装软件，常用的命令可能是“apt-get”。我们现在使用的 CentOS ，属于红帽系，整个红帽系列的发行版所使用的包管理工具都是 rpm 。</p></li><li><p>首先要介绍的就是 rpm ，它是“Red Hat Package Manager”的缩写，很明显，这是红帽的包管理工具。整个红帽系，不论是 Red Hat 企业版、CentOS 还是 Fedora ，使用的软件包管理工具都是 rpm 。可以说，它类似于 Windows 中的“.exe”安装文件，但也有所不同。“.exe”主要负责软件的安装，其他功能较少，而 rpm 功能强大，不仅能安装、卸载，还能更新，甚至能从源码包直接构建软件，比 Windows 中的操作更强大、灵活。</p></li><li><p>rpm 使用了 Red Hat 标志，但其理念通用，因此其他一些系统也支持 rpm 进行软件包管理。既然是管理软件，首先关心的是如何安装软件。在 Windows 中，运行“.exe”文件即可安装，那 rpm 是如何管理的呢？首先，需要有一个安装包。在 rpm 操作中，指定的安装包文件是“.rpm”后缀的文件。</p></li><li><p>看一下其命名规范，比如这样一个文件，前面是要安装的软件名称，此处以 Apache 为例，后面是软件的版本号，再往后，“.i386”指的是软件运行的硬件平台。“i386”指的是英特尔 32 位处理器的统称，若为 64 位处理器，现在一般是“x86_64”。通常，我们现在使用的软件多为这个版本，最后是“.rpm”扩展名，表示这是一个 rpm 包。</p></li><li><p>接下来，就可以使用 rpm 进行软件的安装管理了。首先，在安装前，先查看当前安装了哪些软件。这就涉及到 rpm 的查询命令，rpm 相关命令直接使用“rpm”，若要查询，加“-q”（“q”代表“query”，查询），后面加“-a”表示查询所有已安装的 rpm 软件包。在控制台输入“rpm -qa”，可以看到安装的软件非常多，通常需要进行管道过滤。</p></li><li><p>比如，我们关心的是，虚拟机中有浏览器，应用程序中有 Firefox （火狐浏览器），接下来以它为例，看看 rpm 如何管理。输入“grep Firefox”，能搜索到，确实已安装火狐当前版本“68.10.0 - 1.1.el7”，后面是“x86_64”，表示适用于 64 位英特尔处理器的硬件平台。当然，这里查到的信息只是安装包文件，若要查看更详细信息，可以增加参数。比如，只查询 Firefox ，不需要“-a”，可以加“-qi”，“i”代表“information”，表示展示详细信息。可以直接输入软件名称，就能查询该软件是否安装。能清晰看到 Firefox 的版本、发行版本、硬件架构平台、安装时间、大小、许可证及签名等详细信息。</p></li><li><p>rpm 不仅能查询信息，安装和卸载软件也是重点关注的。比如 Firefox ，已安装，先考察如何卸载。卸载很简单，“rpm”加“-e”选项，后面跟上要卸载的软件包，只需提供软件名称即可。还有一个常见的可选项“--nodeps”，“deps”指“dependence”，即不考虑依赖关系直接卸载。很多软件安装时可能存在依赖关系，若卸载底层软件，依赖它运行的软件可能无法运行，所以卸载时要慎重考虑，一般不推荐强行卸载而不检查依赖关系。</p></li><li><p>接下来，尝试用“rpm -e Firefox”卸载 Firefox 浏览器，会有一些警告，比如某些配置文件或与语言相关的文件未找到，这没关系，可以到系统中查看。查看是否卸载成功，发现未安装软件包 Firefox ，到虚拟机中查看应用程序，互联网中已无火狐浏览器，说明卸载成功。</p></li><li><p>能卸载就能安装，如何安装回来呢？也很简单，“rpm”加“-i”选项，“i”表示“install”，进行安装操作。通常使用时，还要加上“-v”（显示详细信息）和“-h”（“--hash”，显示安装进度条），“v”和“h”结合能有更友好的可视化安装进展。若只使用“-i”，也能安装，但控制台可能无提示信息，安装完成后直接退出，不太友好。安装时也有“--nodeps”选项，表示安装前不检查依赖关系直接安装，安装时此操作问题不大。</p></li><li><p>接下来尝试 rpm 安装，需注意，与卸载或查询不同，安装时必须提供 rpm 安装包的全名。要安装火狐，有对应的安装文件吗？有的，系统安装好后 Firefox 自动安装，其安装文件在系统安装光盘中。先确认光盘是否已挂载，若未挂载需先挂载。确认后查看挂载信息，使用“lsblk”命令，看到光盘存储设备已挂载到“/run/media/root/CentOS 7 x86_64”下，进入该目录，有“packages”目录，很多软件包应在其中，查看是否有 Firefox ，使用“grep”命令，找到之前安装的版本，用此版本进行安装，输入“rpm -ivh Firefox.rpm”，能看到可视化进度条，正在升级或安装，此操作可用于安装或升级。安装完成后，用“rpm -qi Firefox”检查，已安装，回到虚拟机查看应用程序，火狐浏览器又回来了。</p></li><li><p>这就是使用 rpm 进行软件包安装管理的具体过程。</p></li></ul><h2 id="二、软件包管理工具-yum" tabindex="-1"><a class="header-anchor" href="#二、软件包管理工具-yum" aria-hidden="true">#</a> 二、软件包管理工具：Yum</h2>',6),F=a("<li><p>前面介绍了 rpm 这一 Linux 下软件包管理工具的使用过程，包括软件的安装、卸载和查看已安装软件。在使用过程中会发现，其与 Windows 下软件安装过程有相似之处，只是统一进行了管理。但关键是安装软件时，需先获取对应的安装包文件，且必须指定全名。此外，rpm 存在一个较大的问题，即安装过程中可能存在软件依赖关系。比如要安装的 A 软件依赖 B 和 C 软件，若当前系统为最小化安装，未安装 B 和 C ，则安装 A 时会报错，提示需先安装依赖软件才能继续。这会带来诸多麻烦，可能出现依赖嵌套的情况。因此，希望能有一键安装的方式，类似软件商店的“一键下载”功能，无需考虑依赖关系，直接完成下载和安装。</p></li><li><p>在 Linux 系统中，虽无窗口化的软件商店，但命令行中有类似工具，可实现一键化、全自动、智能化的软件安装及依赖关系处理，即 Yum 。在红帽系的 Linux 发行版中，安装软件时通常不再直接使用 rpm 命令，而是用 Yum 。</p></li><li><p>Yum 全称是“Yellow Dog Updater Modified”，是 Linux 软件包管理工具的优化和改进版本。在红帽企业版、CentOS 、Fedora 等红帽系系统中均可使用，其基于 rpm ，管理的安装包也是 rpm 包。Yum 的特点是无需自行寻找安装包，可从指定服务器自动下载，并自动处理所有依赖关系，实现一键安装，相当于命令行版本的应用商店。这与开发中 Maven 从镜像服务器下载依赖类似，Maven 有 Maven 源，Yum 则有 Yum 源。只要连接上，所有内容都会自动从源中下载并处理好依赖关系。</p></li><li><p>接下来尝试使用 Yum ，其使用比 rpm 更简单。输入“yum”，后跟选项和参数。常用选项为“-y”，在安装过程中可能会有交互式提问，如是否安装、是否下载等，回答“y”表示“yes”，“n”表示“no”，若直接“-y”，则表示所有问题均回答“yes”，无需交互，全程自动化。</p></li><li><p>后面的参数较为重要，因为 Yum 是软件包管理工具，需明确是安装、更新、卸载等操作。若安装，后面为“install”及要安装的软件名；若更新，为“update”；若卸载，为“remove”。此外，“check update”用于检查某软件是否有可更新的软件包；“list”显示当前所有软件包信息，包括已安装的软件数量等；“clean”清理 Yum 缓存；“deplete”显示所有依赖关系。</p></li><li><p>仍以 Firefox 为例，因其为浏览器，反复安装和卸载对系统影响较小。首先，使用“yum list”查看已安装的所有软件，因内容较多，可通过“grep Firefox”筛选关注的 Firefox 。能看到已安装的版本（如 68.10.0 ）及检测到的可更新版本（如 91.7.0 ）。接下来，尝试卸载老版本，直接输入“yum remove Firefox”，若之前未加“-y”参数，需输入“y”确认继续，卸载完成。可再次查看确认，用“rpm -q Firefox”，显示未安装软件包，在虚拟机中也可确认互联网中无 Firefox 浏览器。</p></li><li><p>然后重新安装，输入“yum -y install Firefox”，安装过程中会提示下载一个软件包及 7 个依赖软件包，下载和安装速度较快，完成后通过“grep”查看已安装版本，或用“rpm -q Firefox”确认，已安装为 91.7.0 版本，在桌面也能看到最新版本的 Firefox 图标变化，完成了更新安装。</p></li>",7),y={href:"http://mirrorlist.centos.org",target:"_blank",rel:"noopener noreferrer"},Y=e("li",null,[e("p",null,"以上便是使用 Yum 进行软件包管理的全过程。")],-1);function v(C,g){const n=o("router-link"),t=o("ExternalLinkIcon");return s(),m("div",null,[c,h,u(" more "),x,e("nav",_,[e("ul",null,[e("li",null,[r(n,{to:"#概述框架"},{default:l(()=>[i("概述框架")]),_:1})]),e("li",null,[r(n,{to:"#h-第8章软件包管理-1"},{default:l(()=>[i("H-第8章软件包管理")]),_:1})]),e("li",null,[r(n,{to:"#一、linux-下的软件包管理"},{default:l(()=>[i("一、Linux 下的软件包管理")]),_:1})]),e("li",null,[r(n,{to:"#二、软件包管理工具-yum"},{default:l(()=>[i("二、软件包管理工具：Yum")]),_:1})])])]),f,e("ul",null,[F,e("li",null,[e("p",null,[i("关于 Yum 安装还有一点扩展内容。如同 Maven 中可修改 Maven 源以加快从镜像网站下载包的速度，Yum 也可修改 Yum 源。默认情况下，官方镜像网站可能在国外，网速较慢，可指定为国内的阿里云或网易 163 等镜像服务器。相关配置文件在“/etc/yum.repos.d/”目录下的“CentOS-Base.repo”文件。可先查看此文件，如使用“less /etc/yum.repos.d/CentOS-Base.repo”，文件中给定了镜像地址“"),e("a",y,[i("mirrorlist.centos.org"),r(t)]),i("”，即 CentOS 官方网站。虽为国外网站，但下载安装过程很快，这是因为当前镜像系统会根据 IP 地址判断地理位置，选择距离最近的镜像服务器进行更新。查看之前下载安装过程的开头，能看到在寻找最近的镜像源，最终使用了如东北大学或华为云的镜像源，下载速度很快，因此不一定需要更改 Yum 源。但若要手动指定国内源，可使用“wget”工具，先通过“yum install wget”安装，然后用“wget”下载如阿里云或网易 163 的“CentOS 7.repo”文件，替换当前目录下的“CentOS-Base.repo”，替换前最好对原文件重命名备份。此过程与 Maven 中的操作相似。")])]),Y])])}const b=p(d,[["render",v],["__file","H-第8章软件包管理.html.vue"]]);export{b as default};
