import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as l,d as i,a as n,e as t,w as p,b as s,f as u}from"./app-2a2d189a.js";const k={},d=n("h1",{id:"d-字典",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#d-字典","aria-hidden":"true"},"#"),s(" D-字典")],-1),r=n("p",null,"D-字典",-1),m={class:"table-of-contents"},v=u(`<h2 id="一、简单介绍" tabindex="-1"><a class="header-anchor" href="#一、简单介绍" aria-hidden="true">#</a> 一、简单介绍</h2><ul><li>====</li><li></li><li></li></ul><br><h2 id="二、字典" tabindex="-1"><a class="header-anchor" href="#二、字典" aria-hidden="true">#</a> 二、字典</h2><ul><li>各个获取的方法方式：items()、keys()、values() 分别用于获取字典中的所有 key-value 对、所有 key、所有 value。这三个方法依次返回 dict_items、dict_keys 和 dict_values 对象，</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>cars <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;BMW&#39;</span><span class="token punctuation">:</span> <span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token string">&#39;BENS&#39;</span><span class="token punctuation">:</span> <span class="token number">8.3</span><span class="token punctuation">,</span> <span class="token string">&#39;AUDI&#39;</span><span class="token punctuation">:</span> <span class="token number">7.9</span><span class="token punctuation">}</span>
<span class="token comment"># 获取字典所有的key-value对，返回一个dict_items对象</span>
ims <span class="token operator">=</span> cars<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>ims<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;dict_items&#39;&gt;</span>
<span class="token comment"># 将dict_items转换成列表</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>ims<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [(&#39;BMW&#39;, 8.5), (&#39;BENS&#39;, 8.3), (&#39;AUDI&#39;, 7.9)]</span>
<span class="token comment"># 访问第2个key-value对</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>ims<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># (&#39;BENS&#39;, 8.3)</span>
<span class="token comment"># 获取字典所有的key，返回一个dict_keys对象</span>
kys <span class="token operator">=</span> cars<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>kys<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;dict_keys&#39;&gt;</span>
<span class="token comment"># 将dict_keys转换成列表</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>kys<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;BMW&#39;, &#39;BENS&#39;, &#39;AUDI&#39;]</span>
<span class="token comment"># 访问第2个key</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>kys<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># &#39;BENS&#39;</span>
<span class="token comment"># 获取字典所有的value，返回一个dict_values对象</span>
vals <span class="token operator">=</span> cars<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 将dict_values转换成列表</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>vals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [8.5, 8.3, 7.9]</span>
<span class="token comment"># 访问第2个value</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>vals<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 8.3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、字典遍历" tabindex="-1"><a class="header-anchor" href="#二、字典遍历" aria-hidden="true">#</a> 二、字典遍历</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
sxdic<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> sx <span class="token keyword">in</span> sxdic<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## sx[0] 循环 是 “ 1 和 ” 2</span>
    <span class="token comment">## sx[1] 就是[1,2,3]  and [4,5,6]</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>sx<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
<span class="token keyword">print</span><span class="token punctuation">(</span>onedic<span class="token punctuation">[</span><span class="token string">&quot;第一码头{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;站&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、键值为变量" tabindex="-1"><a class="header-anchor" href="#三、键值为变量" aria-hidden="true">#</a> 三、键值为变量</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
sx_one_dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
key <span class="token operator">=</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
value <span class="token operator">=</span> manzailu
sx_one_dic<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>value<span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function b(h,_){const a=c("router-link");return o(),l("div",null,[d,r,i(" more "),n("nav",m,[n("ul",null,[n("li",null,[t(a,{to:"#一、简单介绍"},{default:p(()=>[s("一、简单介绍")]),_:1})]),n("li",null,[t(a,{to:"#二、字典"},{default:p(()=>[s("二、字典")]),_:1})]),n("li",null,[t(a,{to:"#二、字典遍历"},{default:p(()=>[s("二、字典遍历")]),_:1})]),n("li",null,[t(a,{to:"#三、键值为变量"},{default:p(()=>[s("三、键值为变量")]),_:1})])])]),v])}const g=e(k,[["render",b],["__file","D-字典.html.vue"]]);export{g as default};
