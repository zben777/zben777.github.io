import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as n,c as s,d,a as e,e as i,w as t,b as l,f as c}from"./app-2a2d189a.js";const _={},h=e("h1",{id:"g-神经网络预测",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#g-神经网络预测","aria-hidden":"true"},"#"),l(" G-神经网络预测")],-1),u=e("p",null,"G-神经网络预测",-1),f={class:"table-of-contents"},m=c('<h2 id="一、简单介绍" tabindex="-1"><a class="header-anchor" href="#一、简单介绍" aria-hidden="true">#</a> 一、简单介绍</h2><ul><li>大量的数据，不需要模型，只需要输入和输出，黑箱处理，建议作为检验的办法</li><li>通过构建类似于大脑神经突触联接的结构，来进行信息处理。在应用神经网络的过程中，处理信息的单元一般分为三类：输入单元、输出单元和隐含单元。 顾名思义：输入单元接受外部给的信号与数据；输出单元实现系统处理结果的输出；隐含单元处在输入和输出单元之间，从网络系统外部是无法观测到隐含单元的结构的。除了上述三个处理信息的单元之外，神经元间的连接强度大小由权值等参数来决定。<br><br></li></ul><h2 id="二、注意事项" tabindex="-1"><a class="header-anchor" href="#二、注意事项" aria-hidden="true">#</a> 二、注意事项</h2><br><h2 id="三、步骤" tabindex="-1"><a class="header-anchor" href="#三、步骤" aria-hidden="true">#</a> 三、步骤</h2><ol><li>读取数据</li><li>设置训练数据和预测数据</li><li>训练样本数据归一化</li><li>构建BP神经网络</li><li>网络参数配置(训练次数，学习速率，训练目标最小误差.等)</li><li>BP神经网络训练</li><li>测试样本归一化</li><li>BP神经网络预测</li><li>预测结果反归一化与误差计算</li><li>验证集的真实值与预测值误差比较</li></ol><br>',7);function b(x,p){const a=o("router-link");return n(),s("div",null,[h,u,d(" more "),e("nav",f,[e("ul",null,[e("li",null,[i(a,{to:"#一、简单介绍"},{default:t(()=>[l("一、简单介绍")]),_:1})]),e("li",null,[i(a,{to:"#二、注意事项"},{default:t(()=>[l("二、注意事项")]),_:1})]),e("li",null,[i(a,{to:"#三、步骤"},{default:t(()=>[l("三、步骤")]),_:1})])])]),m])}const V=r(_,[["render",b],["__file","G-神经网络预测.html.vue"]]);export{V as default};
